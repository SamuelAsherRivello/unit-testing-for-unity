WEBVTT

00:00.260 --> 00:03.380
Hola y bienvenidos a Unit Testing for unity.

00:03.410 --> 00:07.340
En este taller vamos a ver la clase personaje en una versión avanzada.

00:07.340 --> 00:09.290
Echemos un vistazo a esta demo en acción.

00:09.290 --> 00:11.330
Aquí vamos a abrir nuestra unidad.

00:11.360 --> 00:13.310
Vamos a abrir nuestro proyecto de ejemplo.

00:13.310 --> 00:18.830
Y vamos a echar un vistazo a una escena en el interior para el carácter situación avanzada aquí quiero

00:18.830 --> 00:21.620
hablar un poco sobre la separación de código.

00:21.650 --> 00:26.420
Anteriormente, en uno de los talleres, hablé de las diferentes dependencias que tendrías.

00:26.420 --> 00:28.670
Por ejemplo, si estás llamando a un servidor back-end.

00:28.670 --> 00:35.840
Y en esa situación, usamos una librería sustituta para burlarnos y no necesitar llamar al back end.

00:35.870 --> 00:42.230
Es una discusión similar aquí donde estamos viendo cuáles son las dependencias involucradas con un particular

00:42.230 --> 00:48.950
escenario de prueba, y cómo podemos ser conscientes de esas diferentes dependencias, y qué queremos hacer acerca de

00:48.950 --> 00:49.190
¿eso?

00:49.220 --> 00:51.740
Aquí no vamos a usar la biblioteca sustituta.

00:51.740 --> 00:56.270
Vamos a pensar en separar nuestro monocomportamiento de otro código y echar un vistazo.

00:56.480 --> 00:58.250
Así que aquí estamos dentro de unity.

00:58.580 --> 00:59.750
Tenemos una clase de producción.

00:59.750 --> 01:00.560
Vamos a echarle un vistazo.

01:00.560 --> 01:01.160
Corriendo.

01:04.840 --> 01:07.810
Aquí abajo, vemos que podemos movernos con las flechas del teclado.

01:07.810 --> 01:11.350
Al igual que en el ejemplo básico, la experiencia del usuario final es la misma.

01:11.350 --> 01:16.630
Y eso es algo de un ejemplo interesante aquí, que algunos de los cambios que hacemos para el código

01:16.630 --> 01:21.550
la calidad del código y la comprobabilidad de nuestros sistemas no necesariamente afectan al usuario final.

01:21.580 --> 01:22.680
Eso es positivo.

01:22.690 --> 01:25.570
Echemos un vistazo al código de producción.

01:25.570 --> 01:27.640
Abriremos el ejemplo avanzado de caracteres.

01:27.640 --> 01:29.200
Aquí tenemos un ejemplo completo.

01:29.200 --> 01:35.140
Lo que estamos haciendo dentro de la estela de esta clase de ejemplo es crear una primitiva para el cubo.

01:35.140 --> 01:37.600
Le damos un nombre para organizarlo.

01:37.690 --> 01:45.310
Entonces, en lugar de una línea aquí donde sólo añadimos un componente que tiene toda nuestra funcionalidad, hacemos

01:45.340 --> 01:46.480
dos pasos.

01:46.720 --> 01:52.000
Esto me recuerda un poco a la inyección de dependencia que vimos en el ejemplo del cargador My Data.

01:52.000 --> 01:55.300
Pero este es un caso de uso diferente con diferentes dependencias.

01:55.300 --> 02:00.250
Así que en lugar de sólo una línea de agregar componente hacemos la de agregar componente.

02:00.250 --> 02:05.590
Y luego creamos nuestra propia clase avanzada de carácter no mono-comportamiento.

02:05.590 --> 02:07.840
Y le pasamos el Monobehaviour.

02:07.840 --> 02:12.700
Así que estamos pasando la dependencia que el character advance va a utilizar.

02:12.730 --> 02:19.240
Ahora el avance de caracteres no es un mono-comportamiento, y por lo tanto tenemos más flexibilidad con la forma en que queremos

02:19.240 --> 02:19.810
probarlo.

02:19.840 --> 02:23.110
Podríamos probarlo en modo edición, por ejemplo, más fácilmente.

02:23.260 --> 02:28.330
De nuevo, siempre que estés usando Monobehaviours eso es más apropiado para pruebas en modo reproducción.

02:28.360 --> 02:31.270
No es una regla rígida, pero es una forma de verlo.

02:31.270 --> 02:37.960
Así que aquí, separando nuestro mono comportamiento de nuestro no mono comportamiento, tenemos algunas opciones más.

02:37.990 --> 02:43.360
Ahora todavía estamos aquí en un entorno de modo de juego porque este es el código de producción.

02:43.360 --> 02:46.270
Entremos y veamos cómo ha cambiado nuestro código fuente.

02:46.270 --> 02:48.340
Así que aquí estamos en el carácter avanzado.

02:48.370 --> 02:50.530
Verás que parece bastante familiar.

02:50.530 --> 02:56.400
La mayor parte del código aquí va a ser igual que en el ejemplo básico anterior, con algunas excepciones.

02:56.410 --> 03:02.980
Una es que el carácter avanzado va a tomar una referencia en su constructor al Monobehaviour.

03:03.010 --> 03:08.200
Esto se debe a que necesita saber algunas cosas sobre el Monobehaviour, en particular en torno a su transformación

03:08.200 --> 03:09.040
posición.

03:09.130 --> 03:15.700
También hay una situación en la que tenemos que utilizar la segunda línea y decirle al Monobehaviour una referencia

03:15.700 --> 03:18.130
de vuelta a nosotros como el carácter avanzado.

03:18.160 --> 03:24.790
Esto es sólo para que el MonoComportamiento, cada vez que llame a update pueda decirnos que hagamos el movimiento apropiado.

03:24.820 --> 03:30.280
Hay otras maneras de organizar esto, pero por simplicidad, estamos pasando en el monobehaviour

03:30.280 --> 03:31.660
y manejarlo de esta manera.

03:31.990 --> 03:34.480
Veamos qué otros cambios vemos en el código base.

03:35.800 --> 03:38.140
El tipo de movimiento es el mismo que el básico.

03:38.170 --> 03:40.360
El movimiento por entrada es el mismo.

03:41.260 --> 03:45.610
Aquí abajo el movimiento por código de tecla es muy similar si no idéntico.

03:46.480 --> 03:52.930
Y luego aquí abajo en mover a y mover por, puedes notar que estamos obteniendo y fijando la posición

03:52.930 --> 03:55.630
en la transformación del Monobehaviour.

03:55.630 --> 04:02.590
Así que de nuevo tenemos una clase que no es monocomportamiento haciendo lo que puede hacer sin ninguna dependencia de

04:02.590 --> 04:08.130
Monobehaviour y sólo en los puntos más necesarios se dirige al Monobehaviour.

04:08.140 --> 04:14.140
Esa separación empieza a ayudarnos a pensar cómo podríamos probar sólo el monocomportamiento si pudiéramos,

04:14.170 --> 04:17.140
¿cómo podríamos probar sólo el no monocomportamiento si pudiéramos?

04:17.170 --> 04:22.570
Ahora, esto no es un ejemplo perfecto porque es una especie de paso intermedio a medida que avanzamos aprendiendo sobre

04:22.570 --> 04:24.370
cómo podemos separar correctamente estos.

04:24.370 --> 04:25.900
Pero creo que es un buen aprendizaje.

04:25.900 --> 04:29.800
Así que mira el código fuente aquí para el carácter avanzado.

04:29.800 --> 04:33.880
Compáralo con character Basic en tu tiempo libre y observa las diferencias.

04:34.030 --> 04:36.910
A continuación, echemos un vistazo al ejemplo que hacemos.

04:36.910 --> 04:37.240
Otra vez.

04:37.270 --> 04:38.830
Aquí está el ejemplo que vimos.

04:38.830 --> 04:40.000
Así que son estas dos líneas.

04:40.000 --> 04:41.200
Esa es realmente la clave.

04:41.230 --> 04:47.290
Vamos a añadir un componente del carácter avanzado Monobehaviour en nuestro objeto de juego.

04:47.290 --> 04:49.580
Y luego vamos a crear un nuevo personaje avanzado.

04:49.580 --> 04:50.740
Ese es un paso separado.

04:50.740 --> 04:54.310
Así que podrías imaginar que seríamos capaces de probar esas dos cosas de forma aislada.

04:54.310 --> 04:56.650
Ahora son bastante dependientes la una de la otra.

04:56.680 --> 04:58.390
Hay formas de masajear eso.

04:58.390 --> 05:01.300
Para que una no dependa directamente de la otra.

05:01.300 --> 05:07.660
O podríamos hacer algo como lo que hicimos en el ejemplo del cargador de datos y utilizar una biblioteca sustituta para que

05:07.660 --> 05:10.080
estamos burlándonos de la dependencia en su lugar.

05:10.090 --> 05:15.730
Pero de nuevo, para simplificar el aprendizaje de cómo separar un mono-comportamiento, creo que hemos hecho

05:15.730 --> 05:16.510
el caso aquí.

05:16.510 --> 05:21.430
Puedes hacer esas pruebas con el modo edición y el modo reproducción en tu tiempo libre y echar un vistazo a esto.

05:21.640 --> 05:27.760
Pero para mí, creo que hemos terminado de hablar sobre las diferencias en la separación de mono comportamiento y no mono comportamiento.

05:27.790 --> 05:28.450
Gracias.
