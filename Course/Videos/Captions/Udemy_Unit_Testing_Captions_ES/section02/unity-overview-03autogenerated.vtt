WEBVTT

00:00.140 --> 00:03.740
Editors are some of the main tools we use in software development.

00:03.770 --> 00:10.100
When developing games with unity, the unity editor itself is where we do most of our work.

00:10.100 --> 00:13.470
And then a separate code editor is where we add the code.

00:13.490 --> 00:19.310
The unity editor is made up of a concept of a layout, which is a group of different tabbed and docked

00:19.310 --> 00:20.150
windows.

00:21.040 --> 00:26.830
And each of these windows performs functions and gives us more information about the game and project

00:26.830 --> 00:27.580
we're creating.

00:27.580 --> 00:31.840
Here's a fairly common layout with the most popular and useful windows.

00:31.840 --> 00:34.960
The hierarchy window shows us the objects in the world.

00:34.960 --> 00:38.770
The scene view gives us a 3D representation of that world.

00:38.770 --> 00:42.070
It can also be toggled to 2D for 2D gameplay.

00:42.070 --> 00:48.040
The project window represents the library of all possible assets in code we can bring into that scene,

00:48.040 --> 00:54.460
and as we select on different items and functionality in these windows, the Inspector window gives

00:54.460 --> 00:58.390
us more detail and serialized fields from our code.

00:58.390 --> 01:02.230
Show up here for easy editing at edit time and runtime.

01:02.230 --> 01:03.640
Let's see this in action.

01:03.640 --> 01:06.490
Within the Houdini editor, I'll create a new scene.

01:06.490 --> 01:08.260
I'll create a game object.

01:08.260 --> 01:14.500
I'll add a custom script to that game object, I'll press Play in Unity and we'll see how that script

01:14.500 --> 01:15.850
translates into runtime.

01:15.850 --> 01:21.430
And then I'll play with the serialized fields inside the inspector to demonstrate how that works.

01:21.430 --> 01:25.690
The prerequisites for this course include some free software.

01:25.840 --> 01:29.290
First, use whatever is your favorite web browser.

01:30.110 --> 01:35.180
This is helpful to do any additional research you need to do along with the course.

01:35.710 --> 01:38.380
For example, you can get Chrome by Google.

01:38.380 --> 01:40.990
Next, we'll need the unity editor itself.

01:41.200 --> 01:48.430
The unity editor also comes with a code editor, or you can use whatever code editor you like from the

01:48.460 --> 01:54.580
Getting Started button at the top nav, we find different choices and prices for the unity software

01:54.580 --> 01:55.240
package.

01:55.240 --> 02:02.200
The options include Unity Personal and Unity Student, both of which are free and recommended for use

02:02.200 --> 02:03.090
in this course.

02:03.100 --> 02:08.260
These include all the features and functionality that we talked about, and everything you'll need to

02:08.260 --> 02:09.880
learn from this course as well.

02:09.880 --> 02:16.600
When we first download and run unity in an open, empty project, we'll have that familiar layout and

02:16.600 --> 02:19.200
series of windows we saw before.

02:19.210 --> 02:20.680
Let's create a new scene.

02:20.680 --> 02:24.610
We can do this in many ways, but simply file New Scene.

02:24.610 --> 02:30.430
We'll choose the basic built in scene and in the hierarchy we can see we have the basic scene set up

02:30.430 --> 02:32.770
with the default camera and lighting.

02:32.770 --> 02:34.330
Let's create a new game object.

02:34.330 --> 02:38.890
We'll choose the cube and then put some custom scripting on the cube.

02:38.920 --> 02:44.170
There's many ways we can do that, but we'll choose Game Object, 3D object and Cube.

02:44.170 --> 02:47.680
Now we can see that cube rendering in the game view.

02:47.680 --> 02:51.970
The game view represents what the end users will see from the game camera.

02:51.970 --> 02:58.330
With that cube selected in the hierarchy, we can see in the inspector window all of the current components

02:58.330 --> 02:59.200
attached.

02:59.350 --> 03:01.540
We'll add a new custom component.

03:06.320 --> 03:10.190
Now in our project window, we see the first asset we've created.

03:10.930 --> 03:14.920
We can double click that script and open it in the default code editor.

03:15.600 --> 03:21.090
When we create a new script and we open it, the default code editor opens for us.

03:21.300 --> 03:25.470
And to get you started, unity includes a small bit of template code.

03:25.500 --> 03:30.510
You're free to remove the parts that you don't want or need and begin coding from scratch.

03:30.900 --> 03:35.190
I'll copy from our scripting slide and paste that into unity.

03:35.220 --> 03:40.920
We have the awake method, the start method, and the update method that's going to run every frame.

03:41.640 --> 03:45.010
Here I'm using the transform component to rotate the object.

03:45.030 --> 03:48.570
We save our script here and return to unity and we'll run the scene.

03:48.600 --> 03:56.070
You can see at runtime that that transform rotate code inside the update method is spinning that cube.

03:56.070 --> 04:00.160
Also, while unity is running here with the cube selected.

04:00.180 --> 04:04.020
I see the serialized field of speed and I can manipulate it.

04:12.830 --> 04:15.410
Now it's spinning much, much faster.

04:24.330 --> 04:25.680
Or much slower.

04:28.560 --> 04:35.760
We're able to make these changes to any serialized fields so we can tweak the gameplay feel or game

04:35.760 --> 04:38.370
design without stopping unity.

04:39.160 --> 04:43.360
This is an incredibly powerful feature of the unity engine.

04:43.390 --> 04:47.620
The unity editor shows us an approximation of our game in development.

04:48.070 --> 04:52.510
It's best to test it in a full build to see the real results.

04:52.540 --> 04:56.260
There's many ways to do that, but I'll use file build and Run.

04:56.260 --> 05:00.370
And now we see our project running in a standalone build.

05:00.400 --> 05:03.550
In my case, that's set for windows.

05:03.580 --> 05:06.280
That's it for a brief overview of unity.

05:06.640 --> 05:09.280
Adding scripting and building the project.

05:10.810 --> 05:18.670
With that quick overview of unity, the Unity editor and scripting, we can begin to see how powerful

05:18.670 --> 05:19.510
unity is.

05:19.540 --> 05:22.750
We're only scratching the surface with what's possible.

05:22.750 --> 05:27.030
We've reviewed the theory editor and coding inside Unity.

05:27.040 --> 05:33.130
We've seen the game object is a fundamental concept that prefabs and scenes are used for high level

05:33.130 --> 05:38.860
organization in your project, and that by creating a class and extending monobehaviour, we get a lot

05:38.860 --> 05:40.750
of functionality out of the box.

05:40.750 --> 05:47.050
Next, we'll take a step back from the specifics of unity and look at some software design concepts.

05:47.050 --> 05:55.960
We'll look at design principles, design patterns, and UML or Unified Modeling Language for diagramming

05:55.960 --> 05:57.610
our concepts and plans.

05:58.210 --> 05:59.080
Thank you.
