WEBVTT

00:00.110 --> 00:06.330
Hola y bienvenidos a Inteligencia Artificial para Código de Producción incorporando IA en unity.

00:06.350 --> 00:09.350
El desarrollo de juegos puede agilizar el desarrollo y las pruebas.

00:09.350 --> 00:11.180
Algunos de los beneficios se enumeran aquí.

00:11.180 --> 00:15.710
Y de lo que vamos a hablar en este vídeo en concreto es de la generación de código.

00:15.740 --> 00:22.430
Ser capaz de analizar y sugerir el diseño de nuevos sistemas de optimización de hacer su código más eficiente,

00:22.430 --> 00:25.430
mejor rendimiento, y ahorrar tiempo de desarrollo.

00:25.430 --> 00:27.550
Hay muchas herramientas que puedes usar para este paso.

00:27.560 --> 00:32.330
Las dos que voy a mostrar son ChatGPT y GitHub Copilot.

00:32.540 --> 00:40.520
Generalmente uso ChatGPT para hacer preguntas más grandes, me da más volumen de muestras de código y respuesta, mientras que

00:40.520 --> 00:47.450
uso GitHub copilot cuando necesito una línea, un método, algo más pequeño dentro del contexto de un determinado

00:47.450 --> 00:48.470
página de código.

00:48.860 --> 00:51.380
Sigo evolucionando mi propia práctica.

00:51.380 --> 00:55.970
Voy a mostrar un poco cómo funcionan ambos, y usted puede decidir por sí mismo qué flujo de trabajo hace que

00:55.970 --> 00:56.780
tiene sentido para ti.

00:56.810 --> 00:59.360
Una de las herramientas que podemos utilizar es OpenAI.

00:59.390 --> 01:05.240
Como he mencionado, y puedes hacer clic en el botón de prueba ChatGPT en el sitio web aquí y vamos a abrir el

01:05.240 --> 01:05.510
chat.

01:05.510 --> 01:13.550
GPT Soy un usuario de pago, y eso es una cuota de suscripción mensual para obtener ChatGPT plus, algunas de las características

01:13.550 --> 01:19.430
que puede ver no se utilizan en la versión gratuita, pero sin duda puede seguir utilizando la versión gratuita

01:19.430 --> 01:20.300
y comprobarlo.

01:20.300 --> 01:23.330
La otra herramienta que voy a mostrar es GitHub Copilot.

01:23.330 --> 01:27.350
Normalmente se activa dentro de tu editor de código.

01:27.350 --> 01:33.110
Yo uso escritor, pero se puede utilizar Visual Studio, Visual Studio Code u otras herramientas, y sabe acerca de

01:33.110 --> 01:36.740
la página de código en la que estás y puede darte mejores respuestas contextuales.

01:36.740 --> 01:41.390
Yo sugeriría hacer una prueba de uno o ambos de estos softwares para ver si te gusta el flujo.

01:41.420 --> 01:47.510
Creo que con el tiempo estas herramientas irán madurando, madurando rápidamente, y también bajará el precio

01:47.510 --> 01:50.870
o se introducirá un nivel gratuito para la mayoría de estos productos.

01:50.870 --> 01:51.620
Eventualmente.

01:51.620 --> 01:58.160
Cuando abro ChatGPT en el navegador, obtengo esta experiencia aquí y puedo empezar a iniciar la conversación

01:58.160 --> 01:59.210
con una IA.

01:59.210 --> 02:03.680
Si quiero tener una conversación completamente separada, abro un chat diferente.

02:03.710 --> 02:07.910
ChatGPT sólo conoce la conversación que estás manteniendo en un chat determinado.

02:07.910 --> 02:13.370
Así que si aquí introduzco algunos conceptos y luego abro un chat separado, no conocerá ninguno de los

02:13.370 --> 02:14.660
conceptos de los que he hablado.

02:14.660 --> 02:18.410
Así que generalmente dejaré un chat abierto para cada una de las áreas principales.

02:18.410 --> 02:22.310
Lo que queremos hacer es empezar con un aviso que diga algo como esto.

02:22.490 --> 02:28.340
Diré, actúa como un experto en desarrollo de juegos unity y dime esto o aquello.

02:28.760 --> 02:34.760
Así que he decidido decir crear una clase llamada Product Manager que permita añadir producto, eliminar producto

02:34.760 --> 02:36.020
y obtener productos.

02:36.020 --> 02:39.290
Utilizar una lista o diccionario para gestionar la lista de productos.

02:39.290 --> 02:44.750
Esta lista empezará vacía, así que puedes darle sólo esa información y sabrá que va a ser

02:44.750 --> 02:46.670
un experto en desarrollo de juegos unity.

02:46.700 --> 02:50.240
Deducirá que necesita darte información C-sharp.

02:50.240 --> 02:51.950
Veamos el resultado.

02:51.950 --> 02:53.120
Hemos obtenido dos respuestas completas.

02:53.120 --> 02:54.500
Echemos un vistazo a lo que tenemos aquí.

02:54.800 --> 02:59.420
GPT dice que ciertamente en unity típicamente usarías C-sharp para crear tal clase.

02:59.420 --> 02:59.810
Estupendo.

02:59.810 --> 03:00.940
Está en el camino correcto.

03:00.950 --> 03:06.500
Aquí tienes un ejemplo de cómo podrías implementar un gestor de productos usando una lista para gestionar los productos.

03:06.770 --> 03:10.010
Esto asume que tienes una clase de producto definida en otro lugar.

03:10.010 --> 03:14.180
Añade que no necesariamente quiero o necesito eso, pero me encanta la sugerencia.

03:14.180 --> 03:21.680
Así que en primer lugar se define lo que es un producto por lo que sabe acerca de la palabra producto y aplicación de software en general

03:21.680 --> 03:22.970
usos de un producto.

03:22.970 --> 03:29.690
Podría tener un nombre o un ID, y como insinúa otras propiedades allí, entonces tiene el constructor

03:29.690 --> 03:32.240
y podríamos incluso añadirle más cosas.

03:32.270 --> 03:35.930
Ahora puedo copiar y pegar esto en unity y podemos empezar.

03:35.930 --> 03:37.970
Ahora veamos que otro código nos da.

03:37.970 --> 03:41.120
Aquí está el gestor de productos que tendrá una lista de los productos.

03:41.150 --> 03:45.830
Conoce la diferencia entre privado y público, y cómo probablemente queremos gestionar eso.

03:45.830 --> 03:53.030
Y en general, en este punto de la utilización de este ChatGPT para el código de alrededor de un año en la tecnología, supongo que

03:53.030 --> 03:55.910
generalmente el código va a compilar de inmediato.

03:55.910 --> 03:57.830
Ocasionalmente habrá algún problema con eso.

03:57.830 --> 04:03.260
En particular, podría conseguir algo correcto en el Do sostenido, pero no saber acerca de la unidad o algo así como

04:03.260 --> 04:03.650
eso.

04:03.650 --> 04:08.420
Pero si sabes lo que estás buscando y siempre lo pegas en unity y lo intentas, podrás

04:08.420 --> 04:13.160
rápidamente tendrás una sensación de que es 9,599% correcto.

04:14.110 --> 04:17.210
Aquí tenemos el añadir producto, eliminar producto, etcétera.

04:17.230 --> 04:20.030
Vamos a echar un vistazo a nuestra configuración de la unidad y luego vamos a pegar esto.

04:20.050 --> 04:25.420
Así que aquí estamos dentro de la unidad ya tengo una buena carpeta configurada donde puedo hacer mi trabajo.

04:25.420 --> 04:29.500
Así que dentro de los talleres tengo una carpeta I aquí.

04:29.500 --> 04:33.070
Y dentro ya tengo algunas clases bastante vacías.

04:33.100 --> 04:37.120
Para nuestro ejemplo de IA, el script de ejemplo de IA está aquí.

04:37.120 --> 04:38.950
Echemos un vistazo al código fuente.

04:38.980 --> 04:40.540
Aquí está el ejemplo de IA.

04:40.540 --> 04:45.250
Y como dice el comentario, está listo para que un jefe de producto se lance aquí.

04:45.250 --> 04:47.410
Pero tiene una configuración bastante vacía.

04:48.580 --> 04:55.420
Luego tengo el test runner aquí mostrando la categoría de AI, y tenemos algunas pruebas diferentes de AI

04:55.420 --> 04:55.870
aquí.

04:55.900 --> 04:57.480
Sólo tienes que configurar un vacío.

04:57.490 --> 05:02.500
Si echamos un vistazo al código fuente de la prueba de IA, está bastante vacío.

05:02.500 --> 05:03.550
Así parece.

05:07.570 --> 05:11.170
Y si miramos el test del modo I play, también está bastante vacío.

05:11.500 --> 05:15.380
Y por último, tenemos aquí una clase de gestor de producto que está lista para que entre el código.

05:15.400 --> 05:21.130
Ahora estoy dando un ejemplo algo artificial aquí donde ya sé que quiero un gestor de producto, pero

05:21.130 --> 05:24.520
No tengo mucho más de lo que dependa o necesite hablar.

05:24.550 --> 05:27.010
Así que va a ser fácil para nosotros integrarlo.

05:27.040 --> 05:31.690
Puedes imaginar que tienes un juego con cientos de clases y quieres

05:31.690 --> 05:32.920
añadir un nuevo sistema.

05:32.920 --> 05:36.610
No va a saber todo acerca de su proyecto existente, por lo que va a tener que explicar que a

05:36.610 --> 05:36.890
eso.

05:36.910 --> 05:40.740
Así que hay que admitir que es un ejemplo más simple empezando de cero.

05:40.750 --> 05:45.640
Pero una cosa que quiero mencionar es que tengo algo así como el espacio de nombres aquí.

05:45.640 --> 05:52.090
Y probablemente mientras interactúo con ChatGPT, voy a pegar desde ChatGPT a unity.

05:52.120 --> 05:53.260
Usarlo un poco.

05:53.260 --> 05:58.510
Puede que retoque el código aquí, y entonces querré copiar y pegar de nuevo en ChatGPT.

05:58.510 --> 06:04.180
ChatGPT no sabe nada de mi código aquí, así que siempre tengo que mantener el chat en esta sección separada.

06:04.180 --> 06:05.080
conversación.

06:05.080 --> 06:11.830
Así que una de las cosas que he aprendido es que no quiero tener que pegar manualmente ciertas secciones de

06:11.830 --> 06:14.860
ChatGPT en mi código y ciertas secciones de vuelta.

06:14.860 --> 06:19.000
Así que sólo por ejemplo, tengo este espacio de nombres ya declarado.

06:19.000 --> 06:19.630
Y aquí.

06:19.630 --> 06:24.460
Así que voy a volver a ChatGPT y observe que no tiene ningún espacio de nombres.

06:24.460 --> 06:27.370
Así que voy a decir "buen trabajo".

06:28.890 --> 06:34.170
Por favor, integra este código en tu ejemplo.

06:35.240 --> 06:36.900
Y voy a pegar eso ahí.

06:36.920 --> 06:38.600
Veamos lo que hizo aquí.

06:38.600 --> 06:44.390
Dice ciertamente que integre la clase product manager en el espacio de nombres y estructura proporcionados.

06:44.390 --> 06:48.580
Así que puedo ver que ha añadido esto y esto.

06:48.590 --> 06:55.340
Es sólo un pequeño truco que me doy cuenta de que es útil, de modo que no tengo que volver a añadir manualmente que cada

06:55.340 --> 06:56.660
vez que hago una pregunta.

06:56.660 --> 06:59.210
Creo que a lo largo de este ejercicio verás por qué.

06:59.240 --> 07:02.960
Así que voy a copiar el código completamente y pegarlo en unity.

07:03.080 --> 07:03.680
Allá vamos.

07:03.680 --> 07:08.540
Está pegado y no veo ningún error de compilación.

07:08.540 --> 07:09.080
Vamos a comprobarlo.

07:09.080 --> 07:09.620
Unidad.

07:09.650 --> 07:11.270
Unity ha recompilado.

07:11.270 --> 07:12.440
Todo se ve bien.

07:12.440 --> 07:19.220
Ahora, antes de hacer cualquier prueba, revisemos el ejemplo I aquí y hagamos que ejecute un ejemplo simple

07:19.220 --> 07:20.840
de algunas de las funcionalidades.

07:20.840 --> 07:28.040
Así que voy a copiar todo este script y voy a decir que no se repita ese código.

07:29.340 --> 07:33.930
Creame una nueva página de código para una nueva clase.

07:34.080 --> 07:37.770
Usa esto como inspiración.

07:37.920 --> 07:40.020
Actualiza el despierto.

07:40.640 --> 07:45.830
Con una simple demostración de Product Manager.

07:45.830 --> 07:47.070
Veamos la respuesta aquí.

07:47.090 --> 07:52.100
Ciertamente para crear una nueva clase que demuestre el uso de Product Manager en el awake.

07:52.130 --> 07:53.390
Aquí está el ejemplo.

07:53.420 --> 07:55.150
Echemos un vistazo al código fuente.

07:55.160 --> 07:59.800
Podemos ver que se mantiene el nombre de la clase, el comentario, el espacio de nombres que me gusta.

07:59.810 --> 08:03.010
Mantiene esta parte que yo quería usar.

08:03.020 --> 08:07.550
Pongo este atributo aquí sólo para que no se confunda en las pruebas.

08:07.550 --> 08:09.980
Y luego ejecuto el awake aquí.

08:10.070 --> 08:10.810
Se ve bien.

08:10.820 --> 08:14.820
Ahora copiemos esto en nuestro proyecto unity y veamos como funciona.

08:14.840 --> 08:16.480
Ok, lo he pegado.

08:16.490 --> 08:17.900
No veo ningún error aquí.

08:17.900 --> 08:18.440
Vamos a comprobarlo.

08:18.440 --> 08:18.980
Unidad.

08:19.010 --> 08:19.460
Unidad.

08:19.460 --> 08:20.150
Recompilado.

08:20.160 --> 08:21.650
Parece que todo funciona bien.

08:21.650 --> 08:23.750
Aquí está el ejemplo ya en la escena.

08:23.750 --> 08:24.830
Vamos a ejecutarlo.

08:24.860 --> 08:29.090
Mi consola muestra el ID del producto uno, dos y tres.

08:29.120 --> 08:30.680
Echemos un vistazo al código fuente.

08:30.680 --> 08:32.860
Repasemos lo que estamos haciendo aquí.

08:32.870 --> 08:36.190
Tenemos un gestor de producto que se instanciará.

08:36.200 --> 08:37.700
Añadimos tres productos.

08:37.700 --> 08:39.320
Llamamos al get products.

08:39.320 --> 08:40.730
Y luego los escupimos.

08:40.760 --> 08:46.910
Ahora bien, este es un ejemplo simple que está haciendo algo en un proyecto bastante vacío.

08:46.910 --> 08:52.520
Así que estamos de acuerdo en que es probablemente más fácil de integrar que algo mucho más tarde en un más grande, más complejo

08:52.520 --> 08:53.090
producto.

08:53.090 --> 08:55.190
Pero mira qué increíble es esto.

08:55.220 --> 08:59.450
Fue capaz de darme el gestor de producto y un ejemplo de demostración en la parte superior de la misma.

08:59.450 --> 09:06.320
Eso es todo para esta demostración de cómo la inteligencia artificial, en particular ChatGPT, puede

09:06.320 --> 09:12.140
darnos la capacidad de añadir nuevo código de producción en un vídeo futuro, vamos a echar un vistazo a cómo la IA puede ayudar a

09:12.140 --> 09:15.140
a crear pruebas unitarias en la parte superior de este código de producción.

09:15.710 --> 09:16.490
Gracias.
