WEBVTT

00:00.080 --> 00:03.050
Merhaba ve unity için birim testlerine hoş geldiniz.

00:03.080 --> 00:04.310
Burada atölyedeyiz.

00:04.310 --> 00:08.450
Ve bu yazıda karaktere temel bir biçimde göz atacağız.

00:08.450 --> 00:10.700
Birkaç farklı tanesine bakacağız.

00:10.730 --> 00:13.400
Temel bilgilerle başlayıp daha ileri bir seviyeye geçeceğiz.

00:13.400 --> 00:15.080
Şimdi bu demonun nasıl çalıştığına bir göz atalım.

00:15.080 --> 00:16.520
Unity editörünün içinde.

00:16.520 --> 00:19.430
Unity'yi açacağız, örnek projemizi açacağız.

00:19.430 --> 00:23.360
Daha sonra konuyla ilgili bir ya da daha fazla sahne oynayacağız.

00:23.360 --> 00:29.270
Sahne temel karakter olacak ve ben Monobehaviour hakkında bir şey olarak konuşacağım

00:29.270 --> 00:34.760
test edilip edilemeyeceği ve oynatma moduna karşı düzenleme modu, daha önce de bahsettiğim bir şey

00:34.760 --> 00:36.020
kursun başlarında.

00:36.050 --> 00:37.640
Onu buraya geri getirip hakkında konuşacağız.

00:37.640 --> 00:39.980
İşte projede temel karaktere bakıyoruz.

00:39.980 --> 00:41.390
Devam edelim ve sahneyi çalıştıralım.

00:46.760 --> 00:53.600
Yaptığımız atölye çalışmalarının çoğunda, kesinlikle hiçbir şeyin olmadığı oldukça sıkıcı bir sahne vardı.

00:53.630 --> 00:56.420
Burada ilgi çekici bir şey oluyor, biraz daha var.

00:56.450 --> 01:02.080
Burada oynat tuşuna bastığımızda, ekranın ortasında beyaz bir küpün oluştuğunu görüyoruz.

01:02.090 --> 01:04.640
Ok tuşlarımı kullanabilir ve hareket edebilirim.

01:04.640 --> 01:11.540
Kuşkusuz burada çok basit bir örnek verilmiş olsa da, bu daha karmaşık bazı durumlardan bahsetmek içindir

01:11.540 --> 01:14.200
unity içinde test etmenin yönleri.

01:14.210 --> 01:19.340
Önceki sahnelerde, grafik oluşturma veya girdi alma konusunda endişelenmiyorduk.

01:19.580 --> 01:26.450
Son çalıştayda birkaç farklı bağımlılığı test etmek arasındaki farktan bahsetmiştik

01:26.450 --> 01:27.200
Birlikte.

01:27.200 --> 01:32.390
Örneğin, içinde ikinci bir yöntemi çağıran bir yöntem, içinde üçüncü bir yöntemi çağırır.

01:32.420 --> 01:34.100
Bunlar bağımlılıklar.

01:34.130 --> 01:40.400
Burada benzer bir konudan bahsediyoruz, ancak karakterimi her hareket ettirmek istediğimde önce

01:40.400 --> 01:47.360
Unity'nin giriş sistemini dinlemesini isteyin, ardından Unity'nin Monobehaviour dönüşüm hareketini kullanın.

01:47.360 --> 01:47.770
Doğru.

01:47.780 --> 01:52.460
Yani burada birkaç farklı bağımlılık ya da farklı sınıflar kullanıyoruz.

01:54.970 --> 01:58.240
Burada hareket etmek için ok tuşlarını kullanabiliyorum.

01:59.360 --> 02:00.800
Ve hepsi bu kadar.

02:02.750 --> 02:05.690
Ama fikir şu ki, eskisinden biraz daha fazlasını yapıyoruz.

02:05.780 --> 02:08.250
Bunu test etmenin sonuçları hakkında konuşalım.

02:08.270 --> 02:14.780
Test çalıştırıcısında kategoriyi temel karakterimiz olarak ayarladım, ki bu harika.

02:14.810 --> 02:20.420
Daha sonra oynatma modu testlerinin yanı sıra düzenleme modu testlerini de görmek için geçiş yapabilirim.

02:20.450 --> 02:26.720
Her ikisinden de bazılarına sahip olduğumuzu görebiliriz, ancak tek bir davranış söz konusu olduğu için

02:26.720 --> 02:28.190
oyun moduna daha fazla odaklanın.

02:28.220 --> 02:34.820
Şimdi, atölye çalışmalarının her birine en az bir düzenleme modu testi ve en az bir oyun modu testi ekledim

02:34.850 --> 02:37.020
elimizdeki sahne için test.

02:37.040 --> 02:42.620
Bunu burada tekrar yaptım, ancak gerçekte neyi test ettiğinize bağlı olarak, şunu düşünmek istersiniz

02:42.620 --> 02:47.060
düzenleme modu için mi daha uygun yoksa oynatma modu için mi daha uygun?

02:47.090 --> 02:52.130
Buna nasıl yaklaşacağınız ve kodunuzu nasıl daha iyi tasarlayacağınız konusunda bir sanat ve bilim var.

02:52.130 --> 02:52.760
Test edilebilir.

02:52.790 --> 02:59.600
Ancak bu konuyla ilgili genel bir bakış açısı, Monobehaviour işlevselliğini kullanıyorsanız,

02:59.600 --> 03:02.270
Bu daha çok oyun modu testine benziyor.

03:02.300 --> 03:08.540
Üretiminizde özellikle çalışma zamanında ne kadar çok unity kütüphanesi kullanıyorsanız, şunları düşünmek istersiniz

03:08.540 --> 03:10.460
Bunların oyun modu testleri olduğu hakkında.

03:10.490 --> 03:13.970
Bu kesin bir kural değildir, ancak düşünmeye başlamak için iyi bir yoldur.

03:14.240 --> 03:16.110
Testlerimizi burada çalıştıralım.

03:16.130 --> 03:18.890
Oyun modum var ve hepsini çalıştıracağım.

03:22.470 --> 03:22.800
Tamam.

03:22.830 --> 03:25.650
Çalışması birkaç saniye sürdü ama hepsini bulduk.

03:25.680 --> 03:31.650
Bir oyun modu testi çalıştırdığınızda aslında olan şey, yepyeni boş bir sahne oluşturmak ve

03:31.650 --> 03:35.430
içinde sadece bir test çalıştırır ve onu yok eder.

03:35.430 --> 03:42.630
Ve bir sahne tarafından sağlanan dünya alanına sahip olduğumuzu garanti eden yepyeni bir sahne yaratır.

03:42.630 --> 03:49.590
Ancak yeni bir sahnenin tazeliği, etkileyebilecek herhangi bir bağımlılık veya eski bilgiye sahip değildir.

03:49.590 --> 03:50.220
Test.

03:50.220 --> 03:51.820
Bu şekilde ayarlanmasını seviyoruz.

03:51.840 --> 03:58.620
Şimdi, yaptığım şeyler hareket etmek, anahtar koduyla hareket etmek ve belirli bir yere hareket etmek.

03:58.620 --> 04:01.260
Şimdi test etmek için bu hamleye bir göz atalım.

04:03.240 --> 04:05.580
Aslında, önce üretim koduna bir göz atalım.

04:05.580 --> 04:08.550
Eğer buraya gidersem ve temel örneğe bakarsam.

04:10.370 --> 04:12.140
Bu üretim kodu.

04:12.140 --> 04:14.330
Testlere geçmeden önce buna bir göz atalım.

04:14.330 --> 04:17.570
Burada tek yaptığım bir ilkel oluşturmak.

04:17.600 --> 04:22.610
Eğer bunu yapmak isterseniz buraya bir prefabrik yüklemeyi de hayal edebilirsiniz.

04:22.610 --> 04:27.620
Ancak bizi yavaş yavaş çalışma zamanı ve unity'nin tüm karmaşıklıklarına sokmak istedim.

04:27.620 --> 04:29.750
Yani burada bir prefabrik kullanmıyorum.

04:29.750 --> 04:33.740
Sadece bir satır kod ile sıfırdan yepyeni bir küp oluşturuyorum.

04:33.740 --> 04:40.430
Sadece organizasyon açısından ona bir isim veriyorum ve ardından monobehaviour bileşenini ekliyorum

04:40.430 --> 04:42.230
gerçekten test etmek istediğim.

04:42.230 --> 04:48.350
Sonra yaptığım şeylerden biri onu 000 noktasına taşımak ve sonra bunu göstermek

04:48.350 --> 04:49.910
ekrandaki değer.

04:49.910 --> 04:52.490
Şimdi kaynak koduna bir göz atalım.

04:55.160 --> 04:56.540
İşte temel karakter.

04:56.570 --> 04:58.370
Bu, Monobehaviour'u genişletir.

04:58.400 --> 05:06.330
Unity'ye aşina iseniz, muhtemelen en iyi uygulama olarak Monobehaviours'u her zaman kullanıyorsunuzdur.

05:06.350 --> 05:09.200
Bilinçli düşünmeye başlamak istiyorsunuz.

05:09.200 --> 05:14.260
Ne zaman tek bir davranış kullanmak uygun olur ve ne zaman farklı bir şey kullanabilirim?

05:14.270 --> 05:20.180
Yeni başlayan geliştiriciler olarak, her şeyi tek davranışlı bir çocuk olarak yaratırız, ancak zaman ve deneyimle

05:20.180 --> 05:23.510
monobehaviours kullanmanın artıları ve eksileri olduğunun farkındasınızdır.

05:23.510 --> 05:28.220
Eksilerinden biri, tarihsel olarak, yol boyunca test etmenin daha zor olmasıydı.

05:28.220 --> 05:30.170
Unity bu oyun modu testlerini sağladı.

05:30.170 --> 05:34.550
Artık Playmode'u kesinlikle test edebiliriz ve Monobehaviours'u test edebiliriz.

05:34.550 --> 05:37.230
Bu harika ama yine de bazı dezavantajları var.

05:37.250 --> 05:41.930
Yine, Monobehaviour kaputun altında daha fazla birlik sistemine dayanacaktır.

05:41.930 --> 05:47.300
Ve özel kodumuzu test etmeye çalışırken, sorunun nerede olabileceğinden emin olamayabiliriz.

05:47.330 --> 05:49.320
Bu bizim kodumuz mu yoksa Unity'nin kodu mu?

05:49.340 --> 05:51.710
Yani yine, burada birkaç bağımlılık var.

05:51.740 --> 05:55.880
Bunların hepsi tamam, ancak sınıflarınızı tasarlarken ve

05:55.880 --> 05:57.290
testlerinizi tasarlıyorsunuz.

05:57.710 --> 06:00.680
Yani bir hareket hızımız var.

06:00.710 --> 06:02.060
Bir hareket tipimiz var.

06:02.060 --> 06:04.970
Bu sadece bastığım ok tuşunun yönü.

06:04.970 --> 06:07.280
Sonra Unity'nin güncellemesini kullanırız.

06:07.310 --> 06:10.160
Şimdi gerçekten iki kez kontrol edeyim.

06:12.330 --> 06:12.810
Gerçekten.

06:12.810 --> 06:18.540
Buradaki güncelleme döngüsü, kullandığım tek büyük monobehaviour işlevidir.

06:18.570 --> 06:22.740
Bu kodun geri kalanının mutlaka bir monobehaviour içinde olması gerekmez.

06:22.770 --> 06:27.170
Ayrıca Unity'nin giriş sistemini kullanıyorum, bu da ikinci bir bağımlılık.

06:27.180 --> 06:30.370
Şimdi güncellemenin her karesinde ne yaptığımı görelim.

06:30.390 --> 06:32.940
Bu yöntemi burada girdiye göre hareket olarak adlandırıyorum.

06:32.970 --> 06:37.920
Kullanıcının klavyede belirli bir tuşa veya tuşlara basıp basmadığını kontrol ediyorum.

06:37.920 --> 06:41.970
Ve sonra burada anahtar koduna göre hareket et diyorum.

06:43.280 --> 06:49.820
Tek yapmamız gereken, eğer şu anda sola doğru hareket ediyorsak, o zaman sol yön için bir vektörde hareket edelim demek.

06:49.820 --> 06:53.420
Şu anda sağa doğru hareket ediyorsak ve yukarı ve aşağı için vb.

06:53.420 --> 06:58.460
Böylece dört ok tuşunu kullanarak dört yönde de hareket edebilirsiniz.

06:58.460 --> 07:00.020
Yani oldukça basit bir kod.

07:00.020 --> 07:04.040
Ve daha önce kendi özel karakterinizi yarattıysanız, aşağıdaki gibi bir şey ayarlamaya aşina olursunuz

07:04.040 --> 07:04.610
Bu kadar.

07:07.590 --> 07:09.480
Burada iki yöntemimiz var.

07:09.480 --> 07:14.850
Biri belirli bir noktaya gitmemizi diğeri ise bir birim hareket etmemizi sağlar.

07:14.850 --> 07:17.700
Diyelim ki sağdaki birime geçmek istedim.

07:17.700 --> 07:22.110
Bir birim, bir birim, bir birim geçebilirim.

07:22.110 --> 07:27.350
Eğer doğrudan uzayda belirli bir noktaya gitmek istiyorsam, bu "move to" olacaktır.

07:27.360 --> 07:33.390
Dolayısıyla, özel bir karakter sınıfında ihtiyaç duyacağınız tek yöntemler bunlar olmayabilir, ancak

07:33.390 --> 07:34.710
Bazıları oldukça yaygın.

07:34.710 --> 07:41.460
Bu yüzden bu dersi, bazı işlevleri test etmek için temel, uygun bir çalışma yolu olarak bununla bitireceğiz.

07:41.460 --> 07:46.920
Düzenleme moduna veya oynatma modundaki diğer testlere göz atmak isterseniz, devam edin

07:46.920 --> 07:47.820
ve bunu yap.

07:47.850 --> 07:49.440
Bir sonraki videoya geçiyorum.

07:49.440 --> 07:50.190
Teşekkürler.
