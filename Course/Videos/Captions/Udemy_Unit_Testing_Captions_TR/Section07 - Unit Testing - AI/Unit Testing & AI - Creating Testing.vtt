WEBVTT

00:00.410 --> 00:03.080
Merhaba ve Yapay Zeka'ya hoş geldiniz.

00:03.080 --> 00:07.700
Burada birim test kodu oluşturmamıza yardımcı olması için yapay zeka kullanıyoruz.

00:07.700 --> 00:12.530
Yapay zekanın oyun geliştirmeye dahil edilmesi, geliştirme ve test süreçlerini kolaylaştırabilir.

00:12.530 --> 00:17.480
Bazı faydalar burada yer almaktadır ve biz otomatik testlere odaklanacağız.

00:17.780 --> 00:23.060
Yapay zeka hatalarınızı hızla tespit edip düzeltebilir ve test oluşturma süresini kısaltabilir.

00:23.060 --> 00:28.580
Şimdi, yapay zeka olmadan geleneksel yaklaşım, üretim kodunuzu oluşturmak olacaktır.

00:28.580 --> 00:34.040
Ve eğer birim testlerini benimseyecekseniz, bu testleri ilerledikçe manuel olarak oluşturun.

00:34.070 --> 00:40.430
Bir önceki videoda, yapay zekanın bir üretim kodunun bir kısmı veya tamamı için üretim kodumuzu oluşturmamıza nasıl yardımcı olabileceğini gördük.

00:40.430 --> 00:41.060
oyun sistemi.

00:41.060 --> 00:47.000
Şimdi yapay zekanın birim testlerimizi oluşturma sürecini otomatikleştirmemize nasıl yardımcı olabileceğine bir göz atalım.

00:47.000 --> 00:52.160
Mevcut bir sohbet GPT sohbetimiz var, üretim kodunu nasıl oluşturduğumuzu açın.

00:52.160 --> 00:58.070
Şimdi, sonraki soruları sormaya başladığımda aynı sohbet içinde devam etmem çok önemli

00:58.070 --> 00:59.450
birim testi hakkında.

01:00.370 --> 01:06.670
Örneğin, burada yepyeni bir sohbet oluşturmak isteseydim, bağlamı yeniden tanıtmam gerekirdi,

01:06.670 --> 01:12.190
belki de, hey, bana bu sınıf için birim testi oluşturabilir misin ve sonra sınıfa yapıştırabilir misin veya

01:12.190 --> 01:13.440
ilişkili olan sınıflar?

01:13.450 --> 01:16.030
Ancak burada zaten bir bağlamımız olduğu için bunu kullanacağım.

01:16.030 --> 01:23.680
Önceki bölümde, burada bir ürün yöneticisi sınıfı kullanarak bir örnek oluşturdum ve

01:23.680 --> 01:24.820
bazı ürünler.

01:24.820 --> 01:31.390
Bunun bir oyun mağazasında satılan bir ürün veya dükkanı olan bir NPC karakteri olduğunu hayal edebilirsiniz

01:31.390 --> 01:35.590
belki de size eşyalar veren veya envanterinize koyan, bunun gibi bir şey.

01:35.590 --> 01:40.870
Ve bunun da ötesinde, aynı sohbette ürün yöneticisinin kendisini oluşturuyoruz.

01:40.870 --> 01:44.490
Böylece ürün yöneticisi bir I ve bunun üzerine bir örnek oluşturdu.

01:44.500 --> 01:46.680
Şimdi ondan bize bazı testler vermesini isteyelim.

01:46.690 --> 01:51.880
Yapacağım şey, zaten sahip olduğum bir düzenleme modu testini yapıştırmaktır, böylece ad alanını bilir

01:51.880 --> 01:56.200
ve beğendiğim bir adlandırma yapmasını ve ardından bunu ilgili testlerle doldurmasını istiyorum.

01:56.200 --> 01:57.700
Bakalım burada nasıl olacak.

01:57.700 --> 02:02.080
Unity içinde bir I testi ve I playmode testi var.

02:02.110 --> 02:04.660
Burada sadece düzenleme modu testi yapalım.

02:04.660 --> 02:05.740
İşte burada.

02:05.740 --> 02:09.610
Burada testim adında bir test olduğunu görebiliriz.

02:09.640 --> 02:11.620
Kaynak kodunu açıyoruz ve burada görüyoruz.

02:11.620 --> 02:13.480
Sevdiğim isim alanına sahip.

02:13.480 --> 02:16.090
Kategori olduğunu varsaydığım kullanımlar var.

02:16.090 --> 02:21.640
Bu yüzden ChatGPT'den bize tamamen sıfırdan bir şey yaratmasını istemek yerine, ona şunu vereceğim

02:21.640 --> 02:22.180
Buraya.

02:24.160 --> 02:26.620
Sanırım burada isimlendirmeden kurtulacağım.

02:27.370 --> 02:29.290
Bu yüzden o kısmı önermiyorum.

02:29.320 --> 02:32.710
ChatGPT'ye dönecek olursak, harika diyeceğim.

02:32.740 --> 02:40.150
Şimdi ürün Yöneticisi sınıfının üstünde birim testi istiyorum.

02:40.600 --> 02:49.540
Bir veya daha fazla test yöntemi içeren bir test sınıfı ile yeni bir yanıt oluşturun.

02:52.090 --> 02:54.490
Bu kodla başlayın.

02:55.490 --> 02:57.050
Cevaba bir göz atalım.

02:57.050 --> 03:02.630
Ürün Yöneticisi sınıfı için birim testleri oluşturmak için herhangi bir popüler test çerçevesini kullanabilirsiniz

03:02.630 --> 03:02.780
için.

03:02.990 --> 03:03.500
Net.

03:03.530 --> 03:05.930
Aşağıda test sınıfının bir örneği yer almaktadır.

03:07.070 --> 03:13.730
Ad alanını, yorumları, kategori test adını, verdiğim her şeyi kullandığını görebiliriz

03:13.730 --> 03:14.060
o.

03:14.090 --> 03:16.850
Sonra gerisini kendi başına halleder.

03:16.880 --> 03:19.880
Şimdi fark ettiğim bir şey var, o da bir tane yaratıyor olması.

03:20.900 --> 03:26.270
Burada kurulumda doldurulacak ve belki daha sonra kaldırılacak bir değişken oluşturuyor.

03:26.270 --> 03:27.800
Aslında, yıkma işlemini yapmıyor.

03:28.100 --> 03:33.470
Sonra burada testlerin her birinde yaptığı şey, arrange, act ve assert'i kullanmaktır.

03:33.470 --> 03:35.090
benim özel tercihime uyması için.

03:35.090 --> 03:41.390
Bu yüzden, genel bir çözüm olarak popülariteye dayalı bir tahminde bulunmak hoşuma gitti, eğer bir şekilde

03:41.390 --> 03:45.140
Bunu yapmak istediğim farklı bir yol vardı, bunu talimat verebilirim.

03:45.140 --> 03:46.550
Ama şu ana kadar bunu sevdim.

03:46.550 --> 03:52.970
Böylece test ürününü kurar, ürünü ekler ve ardından get ürününün geri döndüğünden emin olur

03:52.970 --> 03:54.410
o özel ürün.

03:54.410 --> 03:55.760
Bu iyi görünüyor.

03:55.760 --> 03:57.740
Daha sonra bir ürünün nasıl çıkarılacağını test eder.

03:57.740 --> 04:01.100
Böylece bir ürün oluşturmaya ve eklemeye gider.

04:01.100 --> 04:06.170
Sonra onu çıkarmak ve orada gerçekten çalıştığından emin olmak için.

04:06.170 --> 04:11.540
Ve içinde bu şekilde bir ürün olmadığını.

04:11.570 --> 04:13.790
Ürünleri al, tüm ürünleri döndürür.

04:13.790 --> 04:16.130
Yani iki tane yapıyor ve iki tane biliyor.

04:16.130 --> 04:21.230
Şimdi, bunu unity'ye yapıştırmak ve çalıştığından emin olmak benim için harika bir adım olacaktır.

04:21.230 --> 04:22.280
Bunu yapacağım.

04:22.280 --> 04:27.800
Ve sonra geri dönüp düşüneceğim, ekleyebileceğim başka bir test var mı veya bir refactor var mı?

04:27.800 --> 04:30.500
Kodla biraz daha oynamak için yapabileceğimiz bir şey var mı?

04:30.500 --> 04:31.820
Ama bu işin gidişatını seviyorum.

04:31.820 --> 04:33.200
Bunu Unity'ye yapıştıralım.

04:33.230 --> 04:37.820
Unity'nin içine kaydedin, derlenmiş gibi görünür ve unity'nin içinde çalışıyor gibi görünür.

04:37.820 --> 04:38.990
Testi çalıştıralım.

04:40.910 --> 04:42.200
Tüm testler geçti.

04:42.230 --> 04:43.010
Şimdi.

04:43.730 --> 04:45.590
Bize verdiği test isimleri.

04:45.590 --> 04:45.890
Harika.

04:45.890 --> 04:51.110
Benim özel tarzıma uymuyor ve bu noktada karar verebilirim, bana ne verdiğini benimseyebilirim

04:51.110 --> 04:52.730
ya da bir farklılık önermek.

04:52.730 --> 04:58.040
Buradaki fikirle oynamak için, biraz farklı bir adlandırma şeması kullanmanızı önereceğim.

04:58.040 --> 05:01.610
Ama bana verilen testi ve hepsinin geçmesini seviyorum.

05:01.610 --> 05:03.530
Yani şu ana kadar gerçekten iyi gidiyoruz.

05:03.530 --> 05:08.390
Geri dönelim ve sadece küçük bir öneri verme fikriyle oynayalım ve bir kez daha yinelenmesini görelim

05:08.390 --> 05:08.780
Zaman.

05:08.780 --> 05:11.900
O zaman ona neyin harika çalıştığını söyleyelim.

05:11.900 --> 05:16.960
Bu çalışır, derlenir ve tüm testler geçer.

05:16.970 --> 05:25.790
Ancak, test yöntemi adlandırmasını sevmiyorum, bu nedenle lütfen ürün ekleme biçiminden değiştirin.

05:25.790 --> 05:28.880
Ürün ekle gibi yeni bir formatta listeye ürün ekleyin.

05:28.910 --> 05:32.510
Ürün eklendiğinde ürün içeren ürünleri alın.

05:33.080 --> 05:38.930
Genellikle beklenen sonucu test etmek için aşağıdaki gibi bir yöntem izlemeyi severim

05:38.930 --> 05:43.970
bu özel durum gerçekleştiğinde, bazen adlandırma burada gösterildiği gibi biraz uzar.

05:43.970 --> 05:45.650
Bazen çok net olmayabilir.

05:45.650 --> 05:47.240
Bu gerçekten bağlama göre değişir.

05:47.240 --> 05:52.100
Ama dahası, burada gösterdiğim şey ChatGPT'nin bana verdiklerinin çoğunu beğendiğimdir.

05:52.100 --> 05:53.990
Ama bir değişiklik önermek istiyorum.

05:53.990 --> 05:57.200
Şimdi değişiklik olarak bununla oynayalım ve nasıl bir sonuç alacağımızı görelim.

05:57.230 --> 05:58.520
Sonuca bir göz atalım.

05:58.520 --> 06:01.040
Yeniden adlandırmanın kesinlikle iyi göründüğünü söylüyor.

06:01.070 --> 06:06.110
Yöntem, ad, koşul, beklenen sonuç çıkarımı yaptığından bahsediyor.

06:06.230 --> 06:09.530
Aslında beklenen sonucun koşuldan sonra geldiğini düşünüyorum.

06:09.530 --> 06:11.660
Ama şimdi sonuçlara bir göz atalım.

06:11.660 --> 06:14.270
Bunun oldukça uzun olduğunu tekrar kabul ediyorum.

06:14.270 --> 06:18.170
Ancak ürün ekle get ürünleri ürünü içerir.

06:18.170 --> 06:20.480
Ürün eklendiğinde, harika.

06:20.510 --> 06:21.710
İşte daha da uzun bir tane.

06:21.710 --> 06:23.240
Ürün alınmıyor.

06:23.270 --> 06:28.100
Şimdi bunun en iyi adlandırma şeması olmadığını iddia edebilirsiniz, ki burada bu uzun ismi görüyorum,

06:28.100 --> 06:32.690
Düşünüyorum da, hey, belki de iyi bir tane değildir, ama gördüğümüz şey, geri dönebildiğimizdir.

06:32.690 --> 06:37.790
ve ileri ve biraz öneri verin ve ChatGPT'nin iyi çalıştığını görün.

06:37.790 --> 06:41.300
Bunu unity'ye kopyalayalım ve nasıl çalıştığını görelim.

06:41.300 --> 06:42.110
İşte buradayız.

06:42.110 --> 06:42.800
Birlik içinde.

06:42.800 --> 06:43.520
Derlendi.

06:43.520 --> 06:44.810
Ve testleri çalıştıralım.

06:47.350 --> 06:48.850
Ve orada her şey iyi görünüyor.

06:48.850 --> 06:54.490
Bu nedenle, yapay zekanın sadece üretim kodunu aşağıdaki gibi yapmak için değil, harika bir kullanım örneğini gördük

06:54.490 --> 06:59.200
önceki derste yaptığımız gibi, aynı zamanda bu üretim kodunun üzerinde yeni birim testleri oluşturmak için.

06:59.200 --> 07:05.440
Burada, en azından basit demomuzda, unity'nin kodu her seferinde sorunsuz bir şekilde derlediğini gördük,

07:05.440 --> 07:07.350
ve tüm testlerimiz geçti.

07:07.360 --> 07:11.110
Kodun derlenmediğini fark ederseniz, ChatGPT'ye söyleyebilirsiniz.

07:11.410 --> 07:16.720
Hey, bu oldukça iyiydi, ama bu hatayı aldım ve onu eğitmek ve size

07:16.720 --> 07:17.590
daha iyi bir cevap.

07:17.590 --> 07:19.000
Burada bunu yapmamıza gerek yoktu.

07:19.000 --> 07:24.460
Ayrıca, testlerin bir kısmı veya tamamı başarısız olursa, unity'ye genellikle

07:24.460 --> 07:26.350
testler başarısız olur, ancak bu mümkündür.

07:26.350 --> 07:27.490
İşte bu kadar.

07:27.490 --> 07:31.000
Birim testlerinde yapay zeka için harika bir kullanım örneği gördük.

07:31.030 --> 07:31.750
Teşekkürler.
