WEBVTT

00:00.080 --> 00:02.870
Bonjour et bienvenue à Unit Testing for unity.

00:02.900 --> 00:04.940
Je m'appelle Samuel Asher Ravello.

00:04.970 --> 00:10.130
Je suis un développeur et formateur unity avec plus de 20 ans d'expérience dans le développement de jeux.

00:10.130 --> 00:15.720
Ma mission est d'éduquer et de divertir avec la technologie interactive, y compris unity.

00:15.740 --> 00:22.610
J'ai livré des titres unity pour PC, consoles Xbox, et plus encore, et je suis disponible pour des contrats à distance.

00:22.640 --> 00:29.390
en tant que développeur de jeux unity, instructeur de jeux unity, ainsi qu'évangéliste produit.

00:29.420 --> 00:35.660
Mon expérience professionnelle comprend le développement de jeux, la gestion de développeurs de jeux et l'enseignement.

00:35.660 --> 00:37.120
dans le domaine du développement de jeux.

00:37.130 --> 00:44.450
J'ai enseigné dans des universités, en classe, en ligne, j'ai créé des vidéos sur YouTube et j'ai fait de l'éducation.

00:44.450 --> 00:49.910
des vidéos et des analyses de l'expérience du premier utilisateur et des aperçus pour les clients.

00:49.940 --> 00:52.790
Notre sujet ici est le test unitaire pour unity.

00:52.820 --> 00:58.580
Unity est un moteur de jeu polyvalent qui peut être utilisé pour toutes sortes d'industries, y compris, bien sûr,

00:58.580 --> 01:06.380
Le développement de jeux et les tests unitaires sont un sous-sujet qui vous permet de concevoir et de tester vos classes et

01:06.380 --> 01:10.040
architectures afin qu'elles soient plus robustes et plus faciles à maintenir.

01:10.040 --> 01:15.530
Après ce cours, vous envisagerez la création de vos classes d'une nouvelle manière,

01:15.530 --> 01:21.050
et vous penserez à la durée de vie et à la maintenance de votre projet avec plus de confiance.

01:21.050 --> 01:27.800
vous permettant d'effectuer des refontes et des analyses de vos projets et de les mettre à l'échelle plus facilement que jamais auparavant.

01:27.830 --> 01:33.110
Le cours est informellement divisé en quelques pistes d'apprentissage différentes à tout moment.

01:33.110 --> 01:40.040
Nous nous concentrerons un peu plus sur la théorie et les principes fondamentaux de la technique ou du sujet à l'ordre du jour, et nous nous concentrerons un peu plus sur la théorie et les principes fondamentaux de la technique ou du sujet à l'ordre du jour.

01:40.070 --> 01:40.610
main.

01:40.640 --> 01:42.860
Nous jetterons également un coup d'œil à l'éditeur.

01:42.860 --> 01:47.630
Fonctionnalités uniques que nous pouvons utiliser dans unity pour nous permettre d'être des développeurs de jeux.

01:47.630 --> 01:53.600
Nous allons parler ici des tests unitaires et de l'utilisation de la fenêtre Test Runner à l'intérieur de l'éditeur unity.

01:53.600 --> 01:56.390
Et bien sûr, nous allons nous plonger dans le code.

01:56.390 --> 02:02.090
Nous allons supposer que le code de production que nous écrivons, bien que très simple, est à notre portée.

02:02.120 --> 02:03.230
des étudiants ici présents.

02:03.230 --> 02:08.960
Et nous nous concentrerons davantage sur le nouveau code de test qui accompagne notre code de production.

02:08.960 --> 02:15.680
Ce code de test effectuera des tests automatiques sur ce code pour nous donner plus de confiance et de sécurité.

02:15.680 --> 02:20.930
sur l'état actuel de notre projet, en particulier lors de la conception, des refactors et des tests.

02:20.930 --> 02:21.650
maintenance.

02:21.650 --> 02:23.510
Jetons un coup d'œil aux prérequis du cours.

02:23.510 --> 02:25.490
Tout d'abord, il va falloir utiliser un logiciel.

02:25.490 --> 02:30.650
Tout est gratuit, de l'unité à l'éditeur de code en passant par l'ouverture d'un navigateur Web pour approfondir les recherches.

02:30.680 --> 02:31.880
au fur et à mesure que nous avançons.

02:31.880 --> 02:33.040
C'est facile.

02:33.050 --> 02:36.410
J'ai inclus dans ce cours des instructions pour l'installation des éléments dont vous avez besoin.

02:36.410 --> 02:39.470
Et pour commencer, parlons des connaissances préalables.

02:39.470 --> 02:43.490
Il est important de noter que ce cours n'est pas destiné aux débutants.

02:43.490 --> 02:48.230
Nous allons faire quelques hypothèses sur la conception des classes de programmation orientée objet.

02:48.230 --> 02:54.320
Nous parlerons même un peu des interfaces, que certains développeurs débutants ne connaissent pas, ici et là.

02:54.320 --> 02:55.190
tout au long du cours.

02:55.190 --> 02:59.570
S'il y a quelque chose que vous ne comprenez pas et qui ne fait pas partie de notre programme de cours, je vous recommande

02:59.570 --> 03:04.760
de mettre la vidéo en pause et d'aller vérifier, peut-être 5 ou 10 minutes de lecture, puis de revenir dans la vidéo.

03:04.760 --> 03:05.180
le cours.

03:05.180 --> 03:11.720
Forts de ces connaissances, nous nous concentrons sur l'ajout de tests unitaires en tant que nouvelle couche au-dessus de notre production.

03:11.720 --> 03:12.230
code de production.

03:12.230 --> 03:16.670
Je n'irai pas trop loin dans la discussion sur le code de production lui-même.

03:16.670 --> 03:23.270
quelques exemples simples, de quelque chose comme une calculatrice à un simple mouvement de personnage et à une

03:23.270 --> 03:26.480
de chargement de données à partir d'un serveur externe.

03:26.480 --> 03:28.730
Jetons un coup d'œil ensemble au contenu du cours.

03:28.730 --> 03:29.960
Je vais lire.

03:30.130 --> 03:32.690
Nous abordons ici l'introduction du cours.

03:32.720 --> 03:35.960
Il y a toute une section qui fait le point sur l'unité.

03:35.960 --> 03:41.570
Dans cette section, nous verrons une vue d'ensemble d'unity et pourquoi unity est un moteur de jeu populaire.

03:41.570 --> 03:45.320
Bien que l'industrie du jeu soit formidable et qu'il soit intéressant d'y travailler.

03:45.320 --> 03:51.200
Nous verrons ensuite quelques éléments de la structure unity : les objets de jeu, les projets, les scènes, les choses...

03:51.200 --> 03:51.890
comme ça.

03:51.890 --> 03:56.690
Pour beaucoup d'entre nous, il s'agira d'une revue, mais je recommande de la consulter parce que certaines des choses que nous avons faites dans le cadre de ce projet sont très intéressantes.

03:56.690 --> 04:01.040
mentionnés ici se répéteront plus tard dans le cours, et il est bon d'avoir cette nouvelle connexion.

04:01.550 --> 04:06.800
Ensuite, nous ferons un peu de conception de logiciels, en parlant de certains principes de conception et d'un peu d'informatique.

04:06.800 --> 04:14.300
sur les modèles de conception, juste pour que nous comprenions la science et l'art derrière la façon dont nous concevons des logiciels performants.

04:14.300 --> 04:20.150
de sorte qu'une fois que nous aurons commencé les tests unitaires, nous parlerons un peu de ces efficacités.

04:20.150 --> 04:24.740
et de ces principes de conception dans les principes fondamentaux des tests unitaires.

04:24.740 --> 04:27.320
Nous verrons ce qu'est un test unitaire.

04:27.350 --> 04:28.820
Pourquoi voulez-vous le faire ?

04:28.850 --> 04:30.770
Comment le faire dans unity.

04:30.770 --> 04:37.070
Et cela va être un processus étape par étape pour vraiment regarder à partir d'un projet qui n'a pas de tests unitaires unity

04:37.070 --> 04:39.140
à l'ajout de nos premiers tests unitaires.

04:39.140 --> 04:43.640
C'est un bon endroit pour résoudre les problèmes de base.

04:43.670 --> 04:49.160
Ensuite, nous passerons à une série d'ateliers dans les ateliers, chacun d'entre eux sera un peu différent.

04:49.160 --> 04:50.420
plus libre.

04:50.540 --> 04:56.720
Je vais juste partager mon écran et passer en revue l'échantillon de projet de base qui est inclus pour vous.

04:56.720 --> 04:59.560
Et pour chacun d'entre eux, je vais simplement.

04:59.750 --> 05:03.890
Je vais en quelque sorte expliquer la motivation qui se cache derrière chaque projet, en me basant sur un flux de conscience.

05:03.920 --> 05:06.620
Nous ferons un peu de codage au fur et à mesure pour certains d'entre eux.

05:06.620 --> 05:08.990
Certains ateliers seront plus axés sur le codage.

05:09.020 --> 05:14.420
Dans d'autres, j'examinerai le code existant, mais dans tous les cas, il s'agit d'une nouvelle chance pour les participants de se familiariser avec le code.

05:14.420 --> 05:19.700
d'ajouter une couche supplémentaire de confort et de familiarité avec les concepts.

05:20.060 --> 05:24.800
Pendant les ateliers, je recommande d'ouvrir l'exemple de projet et de le suivre ici et là.

05:24.800 --> 05:28.910
tout au long du cours, je mentionnerai qu'il y aura une occasion de traiter certains sujets avancés.
