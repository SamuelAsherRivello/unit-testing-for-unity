WEBVTT

00:00.020 --> 00:02.750
Bonjour et bienvenue à Unit testing for unity.

00:02.780 --> 00:10.010
Nous allons parler ici de Unity Cloud Build comme un moyen populaire de faire de l'intégration continue et du test continu.

00:10.010 --> 00:11.270
déploiement continu avec Unity.

00:11.300 --> 00:17.480
Nous avons donc vu les avantages considérables des tests unitaires et de la mise en place d'un processus automatisé pour l'exécution des tests unitaires.

00:17.480 --> 00:18.620
ces tests unitaires.

00:18.650 --> 00:23.640
L'une de ces options populaires que vous pouvez utiliser est Unity's Cloud build.

00:23.660 --> 00:25.820
Cette option est proposée par Unity lui-même.

00:25.850 --> 00:31.040
Il existe également de nombreuses alternatives tierces ou communautaires à ce que je m'apprête à vous montrer.

00:31.070 --> 00:37.820
Parce que cloud build est spécifique à unity, construit par unity, et qu'il fonctionne très facilement.

00:37.820 --> 00:43.280
Je vais me concentrer sur ce point ici, mais la plupart des étapes que vous voyez ici sont très similaires.

00:43.280 --> 00:45.560
dans la mise en place d'outils compétitifs.

00:45.560 --> 00:49.100
Unity Cloud Build offre donc l'automatisation de la construction de l'unité.

00:49.100 --> 00:55.750
Pour créer des jeux de qualité, il faut disposer d'un pipeline de CD CI prêt à être testé et publié fréquemment.

00:55.760 --> 01:00.440
Automatisez votre pipeline de construction dans le nuage et faites avancer le développement avec unity.

01:00.440 --> 01:01.460
Automatisation de la construction.

01:01.460 --> 01:03.530
Dans cette vidéo, nous allons passer en revue l'ensemble du processus.

01:03.530 --> 01:07.880
Mais Unity Cloud Build est un logiciel en tant que service basé sur le web.

01:07.910 --> 01:12.710
Il est payant, mais il existe un niveau de départ gratuit que nous utiliserons aujourd'hui.

01:12.740 --> 01:17.870
Les entreprises qui ont beaucoup de constructions à faire et qui veulent minimiser le temps d'attente de leurs constructions pourraient

01:17.870 --> 01:23.480
seraient mieux à même de payer pour ce service ou de trouver une alternative.

01:23.870 --> 01:27.350
Une fois que vous utilisez la version Unity Cloud, elle est basée sur le web.

01:27.350 --> 01:30.710
Comme je l'ai mentionné, vous ouvrez l'historique de construction et cliquez sur build.

01:30.710 --> 01:36.350
Si vous voulez faire un test manuellement, ou si vous pouvez planifier ces builds, vous pouvez les avoir, par exemple,

01:36.350 --> 01:42.260
se produire uniquement sur votre branche principale, mais se produire tous les soirs à 1 heure du matin et cela construira automatiquement

01:42.260 --> 01:43.310
une fois par jour.

01:43.340 --> 01:45.190
Vous pouvez également définir un déclencheur.

01:45.200 --> 01:52.220
Vous pouvez également mettre en place des déclencheurs afin qu'il se construise automatiquement en fonction de certains critères, comme lorsque

01:52.220 --> 01:56.540
le code est transféré d'une branche à l'autre, l'exécuter automatiquement.

01:56.540 --> 01:57.920
Vous avez donc quelques options.

01:57.920 --> 02:02.570
Une fois que vous avez lancé la construction, manuellement ou automatiquement, vous et tous les membres de votre équipe de travail pouvez vous concentrer sur les tâches à accomplir.

02:02.570 --> 02:08.300
équipe qui le souhaitent recevront un courriel confirmant les constructions réussies, les constructions échouées, ou tout autre niveau.

02:08.300 --> 02:09.200
d'information que vous souhaitez.

02:09.230 --> 02:10.940
Voyons une démonstration en action.

02:10.940 --> 02:17.180
J'ai déjà créé un projet et je l'ai testé pour m'assurer qu'il fonctionne bien avec Unity.

02:17.180 --> 02:17.600
Nuage.

02:17.600 --> 02:19.310
Construire et terminer.

02:19.310 --> 02:22.550
J'ai fait une partie de ce travail pour comprendre le fonctionnement du système.

02:22.550 --> 02:25.990
Et aussi pour réaliser certaines des captures d'écran que nous avons vues dans cette présentation.

02:26.000 --> 02:32.750
Cependant, je vais reprendre le processus depuis le début pour que vous puissiez voir toutes les étapes.

02:32.780 --> 02:38.150
Maintenant, je ne vais pas créer le projet lui-même, mais je vais faire toute l'automatisation par-dessus.

02:38.150 --> 02:44.780
Voici donc notre projet unity qui a déjà les tests unitaires ajoutés et toutes les différentes scènes d'exemple.

02:44.780 --> 02:49.760
C'est le seul projet pour ce cours et il est lié à la section des ressources du cours.

02:49.760 --> 02:55.460
Nous pouvons le trouver ici sur GitHub pour explorer la page et confirmer qu'il est bien prêt.

02:55.460 --> 02:57.170
Et je vais l'ouvrir dans unity.

02:57.170 --> 02:59.390
Nous voici dans le projet à l'intérieur de unity.

02:59.420 --> 03:01.430
Nous pouvons voir ici dans l'inspecteur.

03:01.430 --> 03:07.070
Nous avons quelques liens sur lesquels nous pouvons cliquer pour accéder à différentes parties du projet pour commencer à voir

03:07.070 --> 03:12.290
des exemples, ainsi qu'en cliquant sur le cours et sur le lien du projet d'exemple lui-même.

03:12.380 --> 03:15.830
Nous pouvons également vérifier que tous les tests unitaires sont réussis à l'intérieur du programme d'exécution des tests.

03:15.830 --> 03:16.850
C'est ce que nous allons faire.

03:19.000 --> 03:21.610
Vous pouvez voir que les 148 tests sont réussis.

03:21.760 --> 03:27.340
Une autre chose que je veux faire est d'aller dans les paramètres de construction, et si ce n'est pas déjà le cas, je veux

03:27.340 --> 03:33.280
ajouter ce keep this scene dans Build Settings for Cloud Build, et je m'assurerai de le valider.

03:33.280 --> 03:34.030
dans le repo.

03:34.060 --> 03:37.900
