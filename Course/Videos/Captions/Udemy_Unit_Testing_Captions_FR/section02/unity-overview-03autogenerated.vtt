WEBVTT

00:00.140 --> 00:03.740
Les éditeurs sont quelques-uns des principaux outils que nous utilisons dans le développement de logiciels.

00:03.770 --> 00:10.100
Lorsque nous développons des jeux avec unity, c'est dans l'éditeur unity que nous effectuons la plus grande partie de notre travail.

00:10.100 --> 00:13.470
Un éditeur de code séparé permet d'ajouter le code.

00:13.490 --> 00:19.310
L'éditeur d'unité est constitué d'un concept de disposition, qui est un groupe de différents onglets et ancrages.

00:19.310 --> 00:20.150
fenêtres.

00:21.040 --> 00:26.830
Chacune de ces fenêtres remplit des fonctions et fournit des informations sur le jeu et le projet.

00:26.830 --> 00:27.580
que nous sommes en train de créer.

00:27.580 --> 00:31.840
Voici une présentation assez courante avec les fenêtres les plus populaires et les plus utiles.

00:31.840 --> 00:34.960
La fenêtre de hiérarchie nous montre les objets du monde.

00:34.960 --> 00:38.770
La vue de la scène nous donne une représentation 3D de ce monde.

00:38.770 --> 00:42.070
Elle peut également être basculée en 2D pour un jeu en 2D.

00:42.070 --> 00:48.040
La fenêtre de projet représente la bibliothèque de toutes les ressources possibles en code que nous pouvons introduire dans cette scène,

00:48.040 --> 00:54.460
et lorsque nous sélectionnons différents éléments et fonctionnalités dans ces fenêtres, la fenêtre de l'inspecteur donne

00:54.460 --> 00:58.390
plus de détails et des champs sérialisés de notre code.

00:58.390 --> 01:02.230
Ils s'affichent ici pour faciliter l'édition au moment de la modification et de l'exécution.

01:02.230 --> 01:03.640
Voyons cela en action.

01:03.640 --> 01:06.490
Dans l'éditeur Houdini, je vais créer une nouvelle scène.

01:06.490 --> 01:08.260
Je crée un objet de jeu.

01:08.260 --> 01:14.500
Je vais ajouter un script personnalisé à cet objet de jeu, je vais appuyer sur Play dans Unity et nous allons voir comment ce script

01:14.500 --> 01:15.850
se traduit en temps d'exécution.

01:15.850 --> 01:21.430
Je vais ensuite jouer avec les champs sérialisés dans l'inspecteur pour montrer comment cela fonctionne.

01:21.430 --> 01:25.690
Les prérequis pour ce cours incluent un logiciel libre.

01:25.840 --> 01:29.290
Tout d'abord, utilisez votre navigateur web préféré.

01:30.110 --> 01:35.180
Cela vous sera utile pour effectuer toute recherche supplémentaire nécessaire dans le cadre de ce cours.

01:35.710 --> 01:38.380
Par exemple, vous pouvez obtenir Chrome de Google.

01:38.380 --> 01:40.990
Ensuite, nous aurons besoin de l'éditeur unity lui-même.

01:41.200 --> 01:48.430
L'éditeur unity est également livré avec un éditeur de code, ou vous pouvez utiliser l'éditeur de code de votre choix à partir de la page d'accueil de l'éditeur unity.

01:48.460 --> 01:54.580
Le bouton Getting Started en haut de la page, nous trouvons différents choix et prix pour le logiciel unity

01:54.580 --> 01:55.240
paquet de logiciels.

01:55.240 --> 02:02.200
Les options comprennent Unity Personal et Unity Student, qui sont tous deux gratuits et dont l'utilisation est recommandée.

02:02.200 --> 02:03.090
dans ce cours.

02:03.100 --> 02:08.260
Ils comprennent toutes les caractéristiques et fonctionnalités dont nous avons parlé, et tout ce dont vous aurez besoin pour

02:08.260 --> 02:09.880
apprendre dans le cadre de ce cours.

02:09.880 --> 02:16.600
Lorsque nous téléchargeons et lançons unity pour la première fois dans un projet ouvert et vide, nous retrouvons la mise en page familière et l'interface de l'application.

02:16.600 --> 02:19.200
série de fenêtres que nous avons vues précédemment.

02:19.210 --> 02:20.680
Créons une nouvelle scène.

02:20.680 --> 02:24.610
Nous pouvons le faire de plusieurs façons, mais il suffit de créer une nouvelle scène.

02:24.610 --> 02:30.430
Nous allons choisir la scène de base intégrée et, dans la hiérarchie, nous pouvons voir que la scène de base est configurée.

02:30.430 --> 02:32.770
avec la caméra et l'éclairage par défaut.

02:32.770 --> 02:34.330
Créons un nouvel objet de jeu.

02:34.330 --> 02:38.890
Nous allons choisir le cube et y ajouter des scripts personnalisés.

02:38.920 --> 02:44.170
Il y a plusieurs façons de procéder, mais nous allons choisir Game Object, 3D object et Cube.

02:44.170 --> 02:47.680
Nous pouvons maintenant voir le rendu du cube dans la vue du jeu.

02:47.680 --> 02:51.970
La vue du jeu représente ce que les utilisateurs finaux verront depuis la caméra du jeu.

02:51.970 --> 02:58.330
Avec ce cube sélectionné dans la hiérarchie, nous pouvons voir dans la fenêtre de l'inspecteur tous les composants actuels.

02:58.330 --> 02:59.200
attachés.

02:59.350 --> 03:01.540
Nous allons ajouter un nouveau composant personnalisé.

03:06.320 --> 03:10.190
Dans notre fenêtre de projet, nous voyons maintenant le premier élément que nous avons créé.

03:10.930 --> 03:14.920
Nous pouvons double-cliquer sur ce script et l'ouvrir dans l'éditeur de code par défaut.

03:15.600 --> 03:21.090
Lorsque nous créons un nouveau script et que nous l'ouvrons, l'éditeur de code par défaut s'ouvre pour nous.

03:21.300 --> 03:25.470
Et pour commencer, unity inclut un petit bout de code modèle.

03:25.500 --> 03:30.510
Vous êtes libre de supprimer les parties dont vous ne voulez pas ou dont vous n'avez pas besoin et de commencer à coder à partir de zéro.

03:30.900 --> 03:35.190
Je vais copier notre diapositive sur les scripts et la coller dans unity.

03:35.220 --> 03:40.920
Nous avons la méthode de réveil, la méthode de démarrage et la méthode de mise à jour qui va s'exécuter à chaque image.

03:41.640 --> 03:45.010
Ici, j'utilise le composant transform pour faire pivoter l'objet.

03:45.030 --> 03:48.570
Nous sauvegardons notre script ici et retournons dans unity pour lancer la scène.

03:48.600 --> 03:56.070
Vous pouvez voir à l'exécution que le code de transformation et de rotation à l'intérieur de la méthode de mise à jour fait tourner le cube.

03:56.070 --> 04:00.160
De plus, lorsque unity est en cours d'exécution, le cube est sélectionné.

04:00.180 --> 04:04.020
Je vois le champ sérialisé de la vitesse et je peux le manipuler.

04:12.830 --> 04:15.410
Il tourne maintenant beaucoup plus vite.

04:24.330 --> 04:25.680
Ou beaucoup plus lentement.

04:28.560 --> 04:35.760
Nous sommes en mesure d'apporter ces modifications à n'importe quel champ sérialisé afin de modifier la sensation de jeu ou le jeu.

04:35.760 --> 04:38.370
sans arrêter unity.

04:39.160 --> 04:43.360
Il s'agit d'une fonctionnalité incroyablement puissante du moteur unity.

04:43.390 --> 04:47.620
L'éditeur unity nous montre une approximation de notre jeu en cours de développement.

04:48.070 --> 04:52.510
Il est préférable de le tester dans une version complète pour voir les résultats réels.

04:52.540 --> 04:56.260
Il y a plusieurs façons de le faire, mais je vais utiliser file build and Run.

04:56.260 --> 05:00.370
Et maintenant, nous voyons notre projet s'exécuter dans une compilation autonome.

05:00.400 --> 05:03.550
Dans mon cas, c'est pour Windows.

05:03.580 --> 05:06.280
C'est tout pour un bref aperçu de unity.

05:06.640 --> 05:09.280
Ajout des scripts et construction du projet.

05:10.810 --> 05:18.670
Avec ce bref aperçu d'Unity, de l'éditeur Unity et des scripts, nous pouvons commencer à voir à quel point les scripts sont puissants.

05:18.670 --> 05:19.510
d'Unity.

05:19.540 --> 05:22.750
Nous ne faisons qu'effleurer la surface de ce qui est possible.

05:22.750 --> 05:27.030
Nous avons passé en revue l'éditeur théorique et le codage à l'intérieur d'Unity.

05:27.040 --> 05:33.130
Nous avons vu que l'objet de jeu est un concept fondamental que les préfabriqués et les scènes sont utilisés pour le haut niveau.

05:33.130 --> 05:38.860
organisation de haut niveau dans votre projet, et qu'en créant une classe et en étendant le monobehaviour, nous obtenons beaucoup de choses.

05:38.860 --> 05:40.750
de fonctionnalités.

05:40.750 --> 05:47.050
Ensuite, nous allons prendre du recul par rapport aux spécificités de unity et examiner quelques concepts de conception de logiciels.

05:47.050 --> 05:55.960
Nous examinerons les principes de conception, les modèles de conception et le langage de modélisation unifié (UML) pour la création de diagrammes.

05:55.960 --> 05:57.610
nos concepts et nos plans.

05:58.210 --> 05:59.080
Nous vous remercions.
