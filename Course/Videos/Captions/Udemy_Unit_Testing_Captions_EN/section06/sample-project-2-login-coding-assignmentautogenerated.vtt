WEBVTT

00:00.180 --> 00:04.080
So I'm going to do live coding here to take on one of the coding challenges.

00:04.080 --> 00:11.250
This one's going to be to add a clear button to the UI so it's not to log in and it's not to log out,

00:11.250 --> 00:14.510
but it's just to clear the username and password fields.

00:14.520 --> 00:19.440
Now, it's a bit of a contrived example here because our logout button does something similar, but

00:19.440 --> 00:26.220
I want to show an example of how we can add something new to The View and have that properly propagate

00:26.220 --> 00:27.330
through the concerns.

00:27.330 --> 00:30.270
So let's start with the view itself and add our new button.

00:30.270 --> 00:37.650
So I go into this game object here, which is a prefab and I'm going to add one new button and I will

00:37.650 --> 00:39.450
call it the clear button.

00:40.650 --> 00:42.300
I'll give it a name.

00:44.190 --> 00:52.350
I will also give it the proper text to say clear, and then I come back here to the log in view and

00:52.350 --> 00:56.190
that's where the login button and log out button are declared.

00:56.190 --> 00:59.490
So I open up that class.

01:00.820 --> 01:06.730
And I will try and keep the order right so that this button sits in the middle visually.

01:07.360 --> 01:11.770
So I will go ahead and do that there and put it between those other two.

01:12.280 --> 01:16.930
I tap back here letting unity recompile.

01:18.540 --> 01:24.810
And now from the UI here I need to declare the clear button is now wired up properly.

01:24.810 --> 01:27.000
So now the view knows about this.

01:27.000 --> 01:28.140
I'll run the scene.

01:29.440 --> 01:31.690
First of all, notice it does not gray out yet.

01:31.690 --> 01:36.910
I haven't, of course, done any coding, but I can click the clear button here so it clicks, but obviously

01:36.910 --> 01:38.080
no consequence yet.

01:39.160 --> 01:41.770
The next thing I'd want to do with that is just kind of follow.

01:41.770 --> 01:43.390
Well, how does the log in button work?

01:43.390 --> 01:44.790
Well, here it is here.

01:44.800 --> 01:53.740
So I'm just going to copy and paste and we'll do clear button and then I'll mimic the structure that's

01:53.740 --> 01:54.440
there.

01:54.460 --> 01:56.470
Clear button gets clicked.

01:56.980 --> 02:01.060
That method doesn't exist yet, so I'll just come down here.

02:04.960 --> 02:05.770
Here we go.

02:06.370 --> 02:10.990
So we can see that inside the login button we have a custom log in event.

02:10.990 --> 02:13.980
So in the clear button, we want to have a custom clear event.

02:13.990 --> 02:16.150
So let's go ahead and clear that here.

02:18.390 --> 02:20.130
We'll call it the on clear.

02:25.750 --> 02:26.170
Here we go.

02:27.580 --> 02:34.420
And I'm going to make that not take any parameters.

02:34.420 --> 02:36.460
So I actually have to adjust.

02:37.520 --> 02:38.420
And.

02:39.680 --> 02:41.990
Because I don't need any parameters.

02:44.520 --> 02:47.550
And as a best practice, I'll just give it its own event there.

02:54.680 --> 02:56.420
Okay, so now we've captured the button.

02:56.420 --> 03:00.100
Click from the UI here in The View and we've dispatched out clear.

03:00.110 --> 03:04.280
I'll mimic how I would work in a production project, especially if I'm adding functionality that's

03:04.280 --> 03:05.890
very similar to something else.

03:05.900 --> 03:10.670
Notice I just looked at how the log in button worked and I copy and paste it.

03:10.700 --> 03:12.560
We're going to follow that same pattern here.

03:13.970 --> 03:16.070
I'm going to find usages of this.

03:25.510 --> 03:32.530
I'm just using the code editor's view references or view usages and being able to see, well, where

03:32.530 --> 03:34.240
does that login event get used?

03:34.240 --> 03:36.310
What gets used inside the controller here?

03:36.310 --> 03:38.800
So I'm just going to mimic that flow as well.

03:41.310 --> 03:43.890
And we'll add a new method here.

03:44.850 --> 03:46.830
So here's the controller.

03:59.780 --> 04:04.880
And in this specific case, I want to translate this view event into a command.

04:05.300 --> 04:09.820
So I'm going to look I'm just going to go to the source of where the submitted command is.

04:09.830 --> 04:11.420
Look in my project here.

04:12.390 --> 04:17.130
Actually don't need any arguments because if you think about clearing out, I don't have to say which

04:17.160 --> 04:18.560
fields were cleared out.

04:18.570 --> 04:24.000
I can just kind of understand that any time the clear button is clicked, don't pass any details along,

04:24.000 --> 04:26.820
just globally clear out what needs to be cleared out.

04:26.820 --> 04:32.490
So I'm going to take no parameters here and I will make the clear command.

04:56.690 --> 05:01.200
So here the controller is now listening to that event and sending out a new command.

05:01.220 --> 05:05.260
So if we were to run the scene right now, everything would compile, right?

05:05.270 --> 05:07.130
We'd be capturing the click.

05:07.130 --> 05:11.750
The click is getting propagated out here to controller, as you'd expect, and then it's sending out

05:11.750 --> 05:14.440
a command, but nobody is listening to the command.

05:14.450 --> 05:17.270
So if you think about it, who should be listening?

05:17.270 --> 05:19.730
Who would actually handle the consequence of this?

05:20.390 --> 05:21.440
Well, it's the view, right?

05:21.440 --> 05:23.570
So let's go ahead and take a look at the view.

05:35.470 --> 05:38.500
So back here In The View, we'll subscribe to that new event.

06:12.280 --> 06:14.380
Okay, We've wired up the clear command correctly.

06:14.380 --> 06:16.470
Now, let's actually think what should happen.

06:16.480 --> 06:19.300
Well, it's something like what happens when we log out.

06:19.300 --> 06:20.770
So let's look at the log out.

06:24.240 --> 06:27.220
So logout, which I copied from here as a starter.

06:27.240 --> 06:32.280
What it does is it just goes through and it properly sets all these fields here.

06:34.400 --> 06:38.810
So we really want something that mimics exactly what logout does.

06:38.810 --> 06:43.400
But for the sake of having something new, let's copy these here.

06:45.230 --> 06:46.550
You know, just replace them.

06:46.760 --> 06:48.290
I know we already have them there.

06:48.290 --> 06:59.150
And I will update this to say log in cleared and for the status text, I'll just say enter username

06:59.150 --> 07:02.900
and password, but I won't put the hint just to have something different here.

07:05.170 --> 07:05.740
Right.

07:05.770 --> 07:12.190
Now, one other thing is that each time that I'm toggling the log in button and log out button, I should

07:12.190 --> 07:15.150
also think about the clear button now.

07:15.160 --> 07:19.840
So let's just go up to the top and I'll scroll through and anywhere I see the interactive will used

07:20.170 --> 07:22.810
update that for the clear button.

07:34.850 --> 07:37.340
So here we have the log in button.

07:37.580 --> 07:39.410
When we log out.

07:43.710 --> 07:49.830
The clear button should not be enabled because when you freshly log out, everything's already cleared.

07:49.830 --> 07:51.060
You shouldn't be able to click it.

07:53.770 --> 07:59.080
Then when you actually hit the clear button again, you should not be able to click clear a second time

07:59.080 --> 08:00.910
because the fields are already clear.

08:04.130 --> 08:06.560
Each time you click, log in.

08:08.350 --> 08:10.630
I'd argue you should be able to.

08:12.760 --> 08:14.020
It clear there?

08:16.030 --> 08:18.190
We don't really have a full login state here.

08:18.190 --> 08:20.770
So some of this is just for demo sake.

08:22.440 --> 08:25.350
And then each time you log out.

08:26.560 --> 08:29.740
Basically we want log out and clear to behave similarly.

08:29.740 --> 08:31.450
So log out and clear.

08:33.040 --> 08:34.240
Yeah, I guess that's right.

08:34.480 --> 08:36.580
Let's take a look and see how we are so far.

08:38.050 --> 08:40.750
Mic so clear button is properly grayed out.

08:43.190 --> 08:48.440
Now, once I start typing here, I would like the clear button to become enabled.

08:48.440 --> 08:49.460
So let's look at that.

09:23.670 --> 09:28.440
So I've updated here any time that those UI fields are being typed into.

09:28.440 --> 09:35.820
I already had a unity event calling this method here, so I only allow login to be submitted if both

09:35.820 --> 09:37.920
of the fields have something in them.

09:38.040 --> 09:42.930
So here I want to say if either of the fields have something in them, then you would be able to hit

09:42.930 --> 09:43.770
the clear button.

09:43.890 --> 09:50.130
This is an implementation level detail, but it's nice to be able to show the types of thoughts and

09:50.130 --> 09:53.490
decisions you would go through as you add a new piece of UI.

09:56.140 --> 09:58.480
So here we are running the demo again.

09:59.940 --> 10:04.170
Notice as I type anything here, the clear button becomes enabled.

10:04.350 --> 10:07.560
If I remove from the field, it becomes disabled.

10:08.190 --> 10:11.010
If I type in a little bit of the password.

10:11.800 --> 10:15.400
And if I undo it, it becomes so we have it working properly.

10:15.670 --> 10:17.740
Now, let's say I had both fields there.

10:17.740 --> 10:23.290
I could log in or I could click clear and it works properly again.

10:23.290 --> 10:24.640
I'll type that again.

10:25.120 --> 10:31.870
Again, here we could log in or we could hit clear, and that's working properly now for us.

10:31.870 --> 10:33.820
So I didn't give it a robust test.

10:33.820 --> 10:35.890
I didn't make sure all the corner cases are there.

10:35.890 --> 10:43.240
But here I wanted to demonstrate what it would be like to add a new UI element and then be able to propagate

10:43.240 --> 10:43.720
through that.

10:43.720 --> 10:51.670
All the concerns and here the concerns were putting the UI into the unity scene, then bringing it into

10:51.670 --> 10:58.360
the View class itself, then listening to The View and passing that along to the controller and then

10:58.360 --> 11:00.670
having the controller send the appropriate commands.

11:00.670 --> 11:02.500
So we were able to do all of that.

11:02.500 --> 11:07.990
Now I was explaining it as I'd go, but let's say this takes a few minutes.

11:08.200 --> 11:15.040
An alternative approach would be simply the View listens to a unity event and updates itself with no

11:15.040 --> 11:18.250
controller involved and with no commands involved.

11:18.370 --> 11:20.560
And that's not a bad place to start.

11:20.560 --> 11:24.790
But now none of the other concerns can capture that moment in time.

11:24.790 --> 11:30.160
What's nice about the flow that we've done here, this kind of full blown orchestration, is that any

11:30.160 --> 11:31.960
concern would be able to listen to?

11:31.990 --> 11:34.210
Did the clear button just get clicked?

11:34.210 --> 11:38.200
Sometimes you need that kind of messaging and sometimes you don't.

11:38.200 --> 11:44.860
So it's up to you as you're navigating the waters here, learning MVC for you to decide between how

11:44.860 --> 11:49.450
robust you want to set up the communication and propagation through the concerns.

11:49.450 --> 11:53.310
So that's it for adding this coding assignment here into the sample.

11:53.320 --> 11:54.130
Thanks.
