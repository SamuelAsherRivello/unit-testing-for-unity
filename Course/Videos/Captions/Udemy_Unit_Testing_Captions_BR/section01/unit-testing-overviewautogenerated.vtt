WEBVTT

00:00.080 --> 00:02.870
Olá e bem-vindo ao Unit Testing for unity.

00:02.900 --> 00:04.940
Meu nome é Samuel Asher Ravello.

00:04.970 --> 00:10.130
Sou um desenvolvedor e instrutor de unity com mais de 20 anos de experiência em desenvolvimento de jogos.

00:10.130 --> 00:15.720
Minha missão é educar e entreter com tecnologia interativa, incluindo unity.

00:15.740 --> 00:22.610
Já enviei títulos em unity para PC, consoles Xbox e outros, e estou disponível para contratos remotos

00:22.640 --> 00:29.390
como desenvolvedor de jogos em unity, instrutor de jogos em unity, bem como evangelista de produtos.

00:29.420 --> 00:35.660
Minha experiência profissional inclui ser um desenvolvedor de jogos, um gerente de desenvolvedores de jogos e fazer educação

00:35.660 --> 00:37.120
no espaço de desenvolvimento de jogos.

00:37.130 --> 00:44.450
Minha experiência de ensino inclui universidades, sala de aula, on-line, criação de vídeos no YouTube e

00:44.450 --> 00:49.910
vídeos e análise da experiência do usuário pela primeira vez e visões gerais para os clientes.

00:49.940 --> 00:52.790
Nosso tópico aqui é Unit Testing for unity.

00:52.820 --> 00:58.580
Unity é um mecanismo de jogo versátil que pode ser usado para todos os tipos de indústrias, incluindo, é claro,

00:58.580 --> 01:06.380
desenvolvimento de jogos e testes unitários é um subtópico que permite projetar e testar suas classes e

01:06.380 --> 01:10.040
arquiteturas para que sejam mais robustas e passíveis de manutenção.

01:10.040 --> 01:15.530
A conclusão aqui é que, após este curso, você pensará em criar suas classes de uma nova maneira,

01:15.530 --> 01:21.050
e também pensará sobre o tempo de vida e a manutenção do seu projeto, com mais confiança

01:21.050 --> 01:27.800
permitindo que você faça refatorações e análises de seus projetos e os amplie com mais facilidade do que nunca.

01:27.830 --> 01:33.110
O curso é dividido informalmente em algumas trilhas de aprendizado diferentes em um determinado momento.

01:33.110 --> 01:40.040
Vamos nos concentrar um pouco mais na teoria e nos fundamentos por trás da técnica ou do tópico em

01:40.070 --> 01:40.610
mão.

01:40.640 --> 01:42.860
Também daremos uma olhada no editor.

01:42.860 --> 01:47.630
Recursos exclusivos que podemos fazer no unity para nos capacitar como desenvolvedores de jogos.

01:47.630 --> 01:53.600
Aqui falaremos sobre testes unitários e o uso da janela Test Runner dentro do unity editor.

01:53.600 --> 01:56.390
E depois, é claro, vamos nos aprofundar no código.

01:56.390 --> 02:02.090
Vamos presumir que o código de produção que estamos escrevendo, embora bastante simples, está ao nosso alcance

02:02.120 --> 02:03.230
dos alunos aqui.

02:03.230 --> 02:08.960
E vamos nos concentrar mais no novo código de teste que acompanha o nosso código de produção.

02:08.960 --> 02:15.680
Esse código de teste executará testes automáticos nesse código para nos dar mais confiança e segurança

02:15.680 --> 02:20.930
sobre o estado atual do nosso projeto, principalmente quando estivermos projetando e fazendo refatorações e

02:20.930 --> 02:21.650
manutenção.

02:21.650 --> 02:23.510
Vamos dar uma olhada nos pré-requisitos do curso.

02:23.510 --> 02:25.490
Primeiro, haverá algum software envolvido.

02:25.490 --> 02:30.650
Tudo é gratuito, desde a unidade até o editor de código e a abertura de um navegador da Web para fazer mais pesquisas

02:30.680 --> 02:31.880
à medida que avançamos.

02:31.880 --> 02:33.040
Isso é fácil.

02:33.050 --> 02:36.410
Incluo instruções neste curso sobre como instalar as coisas de que você precisa.

02:36.410 --> 02:39.470
E para começar, vamos falar sobre os pré-requisitos de conhecimento.

02:39.470 --> 02:43.490
Portanto, é importante observar que este curso não é para iniciantes.

02:43.490 --> 02:48.230
Vamos fazer algumas suposições sobre projetos de classes de programação orientada a objetos.

02:48.230 --> 02:54.320
E até falaremos um pouco sobre interfaces com as quais alguns desenvolvedores iniciantes não estão familiarizados aqui e

02:54.320 --> 02:55.190
durante o curso.

02:55.190 --> 02:59.570
Se houver algo que você não entenda e que não faça parte do currículo do nosso curso, recomendo

02:59.570 --> 03:04.760
pausar o vídeo e dar uma olhada, talvez 5 ou 10 minutos de leitura e depois voltar ao

03:04.760 --> 03:05.180
o curso.

03:05.180 --> 03:11.720
Com esse conhecimento, estamos realmente nos concentrando em adicionar testes unitários como uma nova camada sobre a nossa produção

03:11.720 --> 03:12.230
código.

03:12.230 --> 03:16.670
Não vou me aprofundar muito em falar sobre o código de produção em si e, no curso, passaremos por

03:16.670 --> 03:23.270
alguns exemplos simples também, desde algo como uma calculadora até um simples movimento de personagem e um

03:23.270 --> 03:26.480
um pouco de coisas sobre como carregar alguns dados de um servidor externo.

03:26.480 --> 03:28.730
Vamos dar uma olhada juntos no conteúdo do curso.

03:28.730 --> 03:29.960
Eu vou ler junto.

03:30.130 --> 03:32.690
Estamos abordando a introdução do curso aqui.

03:32.720 --> 03:35.960
Há uma seção inteira com uma revisão sobre a unidade.

03:35.960 --> 03:41.570
Nessa seção, veremos uma visão geral do unity sobre por que o unity é um mecanismo de jogo popular.

03:41.570 --> 03:45.320
Embora a indústria de jogos seja ótima e interessante para se trabalhar.

03:45.320 --> 03:51.200
E então veremos algumas coisas sobre a estrutura da unidade, objetos de jogos, projetos, cenas, coisas

03:51.200 --> 03:51.890
como essas.

03:51.890 --> 03:56.690
Para muitos de nós, isso será uma revisão, mas eu recomendo dar uma olhada porque algumas das coisas que nós

03:56.690 --> 04:01.040
mencionadas ali se repetirão mais tarde no curso, e é bom ter essa nova conexão.

04:01.550 --> 04:06.800
Em seguida, faremos um pouco de design de software, falando sobre alguns princípios de design e um pouco de

04:06.800 --> 04:14.300
sobre padrões de design, para que possamos entender a ciência e a arte por trás de como projetar software com bom desempenho

04:14.300 --> 04:20.150
para que, quando começarmos os testes unitários, possamos falar um pouco sobre essas eficiências

04:20.150 --> 04:24.740
e esses princípios de design nos fundamentos dos testes unitários.

04:24.740 --> 04:27.320
Veremos o que é um teste de unidade.

04:27.350 --> 04:28.820
Por que você quer fazer isso.

04:28.850 --> 04:30.770
Como você o faz dentro do unity.

04:30.770 --> 04:37.070
E esse será um processo passo a passo para realmente olhar a partir de um projeto que não tem testes de unidade de unidade

04:37.070 --> 04:39.140
para adicionar nossos primeiros testes unitários.

04:39.140 --> 04:43.640
Esse é um ótimo lugar para realmente resolver os problemas básicos.

04:43.670 --> 04:49.160
Em seguida, passaremos a realizar uma série de workshops nos workshops, cada um deles será um pouco

04:49.160 --> 04:50.420
de forma mais livre.

04:50.540 --> 04:56.720
Vou apenas compartilhar a minha tela e analisar o projeto de amostra do núcleo central que está incluído para você.

04:56.720 --> 04:59.560
E em cada um deles eu vou apenas.

04:59.750 --> 05:03.890
Vou fazer uma espécie de fluxo de consciência explicando a motivação por trás disso.

05:03.920 --> 05:06.620
Faremos um pouco de codificação à medida que avançamos em alguns deles.

05:06.620 --> 05:08.990
Alguns dos workshops serão mais pesados em termos de código.

05:09.020 --> 05:14.420
Em outros, revisarei o código existente, mas, em todos eles, é realmente outra chance

05:14.420 --> 05:19.700
de acrescentar mais uma camada sobre outra de conforto e familiaridade com os conceitos.

05:20.060 --> 05:24.800
Durante os workshops, recomendo que você abra o projeto de exemplo e acompanhe-o aqui e ali

05:24.800 --> 05:28.910
Durante o curso, mencionarei que haverá uma oportunidade de abordar alguns tópicos avançados.
