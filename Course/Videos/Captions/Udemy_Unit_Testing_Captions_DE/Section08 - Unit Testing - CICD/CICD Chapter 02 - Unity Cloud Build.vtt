WEBVTT

00:00.020 --> 00:02.750
Hallo und willkommen zu Unit Testing für Unity.

00:02.780 --> 00:10.010
Hier werden wir über Unity Cloud Build sprechen, eine beliebte Methode für kontinuierliche Integration und kontinuierliche

00:10.010 --> 00:11.270
Bereitstellung mit Unity.

00:11.300 --> 00:17.480
Wir haben also die enormen Vorteile von Unit-Tests und der Einrichtung eines automatisierten Prozesses zur Durchführung von

00:17.480 --> 00:18.620
dieser Einheitstests.

00:18.650 --> 00:23.640
Eine dieser beliebten Optionen, die man nutzen kann, ist Unitys Cloud-Build.

00:23.660 --> 00:25.820
Dies wird von Unity selbst angeboten.

00:25.850 --> 00:31.040
Es gibt auch viele Alternativen von Drittanbietern oder aus der Community zu dem, was ich euch jetzt zeigen werde.

00:31.070 --> 00:37.820
Denn Cloud Build ist Unity-spezifisch, von Unity erstellt, und es funktioniert ganz einfach.

00:37.820 --> 00:43.280
Ich werde mich hier darauf konzentrieren, aber die meisten der Schritte, die du hier siehst, sind sehr ähnlich

00:43.280 --> 00:45.560
bei der Einrichtung einiger wettbewerbsfähiger Werkzeuge.

00:45.560 --> 00:49.100
Unity Cloud Build bietet also Unity Build Automation.

00:49.100 --> 00:55.750
Qualitativ hochwertige Spiele zu entwickeln bedeutet, eine CI-CD-Pipeline zu haben, die für häufige Tests und Freigaben bereit ist.

00:55.760 --> 01:00.440
Automatisieren Sie Ihre Build-Pipeline in der Cloud und halten Sie die Entwicklung mit Unity in Gang.

01:00.440 --> 01:01.460
Build-Automatisierung.

01:01.460 --> 01:03.530
In diesem Video werden wir den gesamten Prozess durchgehen.

01:03.530 --> 01:07.880
Aber Unity Cloud Build ist eine webbasierte Software als Service.

01:07.910 --> 01:12.710
Sie kostet, aber es gibt eine kostenlose Einstiegsversion, die wir heute benutzen werden.

01:12.740 --> 01:17.870
Unternehmen, die viele Gebäude bauen müssen und die Wartezeit für ihre Gebäude minimieren wollen, sollten

01:17.870 --> 01:23.480
am besten mit bezahlten Stufen für diesen Dienst oder einer Alternative.

01:23.870 --> 01:27.350
Sobald man die Unity Cloud verwendet, ist sie webbasiert.

01:27.350 --> 01:30.710
Wie ich bereits erwähnt habe, öffnet man die Build-Historie und klickt auf Build.

01:30.710 --> 01:36.350
Wenn Sie manuell einen Test durchführen wollen, oder Sie können diese Builds planen, können Sie sie zum Beispiel haben,

01:36.350 --> 01:42.260
nur auf Ihrem Hauptzweig stattfinden, aber jede Nacht um 1 Uhr nachts und es wird einfach automatisch gebaut

01:42.260 --> 01:43.310
einmal am Tag zu diesem Zeitpunkt.

01:43.340 --> 01:45.190
Sie können auch einen Auslöser einrichten.

01:45.200 --> 01:52.220
Man kann auch Auslöser einrichten, so dass es sich automatisch nach bestimmten Kriterien aufbaut, z.B. wenn

01:52.220 --> 01:56.540
Code von einem Zweig auf einen anderen übertragen wird, automatisch ausgeführt wird.

01:56.540 --> 01:57.920
Sie haben also einige Optionen.

01:57.920 --> 02:02.570
Und sobald Sie den Build gestartet haben, entweder manuell oder automatisch, werden Sie und alle Mitglieder Ihres

02:02.570 --> 02:08.300
Teams, die dies wünschen, eine E-Mail erhalten, in der erfolgreiche oder fehlgeschlagene Builds bestätigt werden, oder was auch immer für ein Level

02:08.300 --> 02:09.200
der Informationen, die Sie wünschen.

02:09.230 --> 02:10.940
Sehen wir uns eine Demo davon in Aktion an.

02:10.940 --> 02:17.180
Jetzt habe ich bereits ein Projekt erstellt und getestet, ob es mit Unity funktioniert

02:17.180 --> 02:17.600
Wolke.

02:17.600 --> 02:19.310
Erstelle und beende es.

02:19.310 --> 02:22.550
Ich habe etwas von dieser Arbeit gemacht, damit ich verstehe, wie das System funktioniert.

02:22.550 --> 02:25.990
Und auch, um einige der Screenshots zu machen, die wir hier in dieser Präsentation gesehen haben.

02:26.000 --> 02:32.750
Ich werde jedoch den Prozess von vorne beginnen, damit Sie jeden Schritt sehen können.

02:32.780 --> 02:38.150
Jetzt werde ich nicht das Projekt selbst erstellen, sondern die gesamte Automatisierung darauf aufbauen.

02:38.150 --> 02:44.780
Hier ist also unser Unity-Projekt, das bereits die Unit-Tests und alle verschiedenen Beispielszenen enthält.

02:44.780 --> 02:49.760
Es ist das einzige Projekt für diesen Kurs und es ist im Abschnitt Kursressourcen verlinkt.

02:49.760 --> 02:55.460
Wir können es hier auf GitHub finden, um die Seite zu erkunden und zu bestätigen, dass es tatsächlich fertig ist.

02:55.460 --> 02:57.170
Und ich werde es in Unity öffnen.

02:57.170 --> 02:59.390
Hier sind wir im Projekt innerhalb von Unity.

02:59.420 --> 03:01.430
Wir können hier oben im Inspektor sehen.

03:01.430 --> 03:07.070
Wir haben einige Links, durch die wir zu verschiedenen Bereichen des Projekts klicken können, um zu sehen

03:07.070 --> 03:12.290
einige der Beispiele sowie den Link zum Kurs und zum Beispielprojekt selbst anklicken.

03:12.380 --> 03:15.830
Wir können auch testen, ob alle Unit-Tests im Test-Runner erfolgreich sind.

03:15.830 --> 03:16.850
Das sollten wir also tun.

03:19.000 --> 03:21.610
Sie können sehen, dass alle 148 Tests erfolgreich waren.

03:21.760 --> 03:27.340
Etwas anderes, was ich tun möchte, ist in die Build-Einstellungen zu gehen, und wenn es nicht bereits dort ist, möchte ich

03:27.340 --> 03:33.280
diese Szene in den Build Settings for Cloud Build hinzufügen, und ich werde sicherstellen, dass ich das

03:33.280 --> 03:34.030
in das Repo.

03:34.060 --> 03:37.900
